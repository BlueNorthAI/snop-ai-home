{
  "version": 3,
  "sources": ["../../../app/kendo/charts/donut/kendoDonutChart.client.js", "../../../app/kendo/charts/donut/WrapperDonutChart.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\kendo\\\\\\\\charts\\\\\\\\donut\\\\\\\\kendoDonutChart.client.js\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\kendo\\\\charts\\\\donut\\\\kendoDonutChart.client.js\");\n  import.meta.hot.lastModified = \"1708503722810.114\";\n}\n// REMIX HMR END\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Chart, ChartLegend, ChartSeries, ChartSeriesItem, ChartSeriesLabels } from \"@progress/kendo-react-charts\";\nimport \"hammerjs\";\nconst labelContent = props => {\n  let formatedNumber = Number(props.dataItem.value).toLocaleString(undefined, {\n    style: \"percent\",\n    minimumFractionDigits: 2\n  });\n  return `${formatedNumber}`;\n};\nconst labelContent1 = e => `${e.category}: \\n ${e.value}%`;\nexport function DonutChartContainer({\n  series\n}) {\n  return <Chart style={{\n    height: 250\n  }}>\r\n      <ChartSeries>\r\n        <ChartSeriesItem type=\"donut\" data={series} categoryField=\"category\" field=\"value\">\r\n          <ChartSeriesLabels color=\"#fff\" background=\"none\" content={labelContent} />\r\n        </ChartSeriesItem>\r\n      </ChartSeries>\r\n      <ChartLegend visible={true} />\r\n    </Chart>;\n}\n_c = DonutChartContainer;\nconst DountDoubleChartContainer = ({\n  series,\n  index,\n  array\n}) => {\n  const mapSeries = (series, index, array) => <ChartSeriesItem type=\"donut\" startAngle={150} name={series.name} data={series.data} field=\"value\" categoryField=\"category\" colorField=\"color\">\r\n      {index === array.length - 1 && <ChartSeriesLabels position=\"outsideEnd\" background=\"none\" content={labelContent1} />}\r\n    </ChartSeriesItem>;\n  const renderTooltip = context => {\n    const {\n      category,\n      series,\n      value\n    } = context.point || context;\n    return <div>\r\n        {category} ({series.name}): {value}%\r\n      </div>;\n  };\n  return <Chart>\r\n      <ChartSeries>\r\n        <ChartTooltip render={renderTooltip} />\r\n        {/* <ChartTitle text=\"Share of Internet Population Growth\" /> */}\r\n        <ChartLegend visible={false} />\r\n        <ChartArea background=\"none\" />\r\n      </ChartSeries>\r\n    </Chart>;\n};\n_c2 = DountDoubleChartContainer;\nvar _c, _c2;\n$RefreshReg$(_c, \"DonutChartContainer\");\n$RefreshReg$(_c2, \"DountDoubleChartContainer\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\kendo\\\\\\\\charts\\\\\\\\donut\\\\\\\\WrapperDonutChart.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\kendo\\\\charts\\\\donut\\\\WrapperDonutChart.jsx\");\n  import.meta.hot.lastModified = \"1708503722809.1138\";\n}\n// REMIX HMR END\n\nimport { DonutChartContainer } from '~/kendo/charts/donut/kendoDonutChart.client';\nconst Fallback = () => {\n  return <div>\r\n          <svg width={20} height={20} fill=\"none\">\r\n        <path d=\"M12 4.75v1.5M17.127 6.873l-1.061 1.061M19.25 12h-1.5M17.127 17.127l-1.061-1.061M12 17.75v1.5M7.934 16.066l-1.06 1.06M6.25 12h-1.5M7.934 7.934l-1.06-1.06\" stroke=\"currentColor\" strokeWidth={0} strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      </svg>\r\n    </div>;\n};\n_c = Fallback;\nexport default function WrapperDonutChart({\n  series\n}) {\n  return typeof document !== \"undefined\" ? <DonutChartContainer series={series} /> : <Fallback />;\n}\n\n// export function WrapperDoubleDonutChart({series}){\n//   return typeof document !== \"undefined\" ? <DountDoubleChartContainer series={series} /> : <Fallback />\n// }\n_c2 = WrapperDonutChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"Fallback\");\n$RefreshReg$(_c2, \"WrapperDonutChart\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["series", "index", "array", "import_jsx_dev_runtime", "_c", "_c2"]
}
