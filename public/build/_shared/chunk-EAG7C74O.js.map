{
  "version": 3,
  "sources": ["../../../app/data/columndata/data.tsx", "../../../app/data/columndata/schema.ts", "../../../app/components/data-table-row-actions-inci.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app\\\\data\\\\columndata\\\\data.tsx\"\n);\nimport.meta.hot.lastModified = \"1710849687985.206\";\n}\n// REMIX HMR END\n\nimport {\n  ArrowDownIcon,\n  ArrowRightIcon,\n  ArrowUpIcon,\n  CheckCircledIcon,\n  CircleIcon,\n  CrossCircledIcon,\n  QuestionMarkCircledIcon,\n  StopwatchIcon,\n} from \"@radix-ui/react-icons\"\n\nexport const labels = [\n  {\n    value: \"Logistics\",\n    label: \"Logistics\",\n    color: \"bg-blue-100\",\n  textClr: \"text-blue-800\"\n  },\n  {\n    value: \"Demand-Planning\",\n    label: \"Demand Planning\",\n    color: \"bg-green-100\",\n    textClr: \"text-green-800\"\n  },\n  {\n    value: \"Inventory\",\n    label: \"Inventory\",\n    color: \"bg-rose-100\",\n    textClr: \"text-rose-800\"\n  },\n];\n\nexport const statuses = [\n  {\n    value: \"backlog\",\n    label: \"Backlog\",\n    icon: QuestionMarkCircledIcon,\n  },\n  {\n    value: \"todo\",\n    label: \"Todo\",\n    icon: CircleIcon,\n  },\n  {\n    value: \"in progress\",\n    label: \"In Progress\",\n    icon: StopwatchIcon,\n  },\n  {\n    value: \"done\",\n    label: \"Done\",\n    icon: CheckCircledIcon,\n  },\n  {\n    value: \"canceled\",\n    label: \"Canceled\",\n    icon: CrossCircledIcon,\n  },\n]\n\nexport const priorities = [\n  {\n    label: \"Low\",\n    value: \"low\",\n    icon: ArrowDownIcon,\n  },\n  {\n    label: \"Medium\",\n    value: \"medium\",\n    icon: ArrowRightIcon,\n  },\n  {\n    label: \"High\",\n    value: \"high\",\n    icon: ArrowUpIcon,\n  },\n]\n", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app\\\\data\\\\columndata\\\\schema.ts\"\n);\nimport.meta.hot.lastModified = \"1699816360000\";\n}\n// REMIX HMR END\n\nimport { z } from \"zod\"\n\n// We're keeping a simple non-relational schema here.\n// IRL, you will have a schema for your data models.\nexport const taskSchema = z.object({\n  id: z.string(),\n  title: z.string(),\n  status: z.string(),\n  label: z.string(),\n  priority: z.string(),\n})\n\nexport type Task = z.infer<typeof taskSchema>\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\data-table-row-actions-inci.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\data-table-row-actions-inci.tsx\");\n  import.meta.hot.lastModified = \"1711178135222.2534\";\n}\n// REMIX HMR END\n\nimport { DotsHorizontalIcon } from \"@radix-ui/react-icons\";\nimport { Button } from \"../components/ui/button\";\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuRadioGroup, DropdownMenuRadioItem, DropdownMenuSeparator, DropdownMenuShortcut, DropdownMenuSub, DropdownMenuSubContent, DropdownMenuSubTrigger, DropdownMenuTrigger } from \"../components/ui/dropdown-menu\";\nimport { labels } from \"../data/columndata/data\";\nimport { taskSchema } from \"../data/columndata/schema\";\nexport function DataTableRowActions({\n  row\n}) {\n  const task = taskSchema.parse(row.original);\n  return <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"ghost\" className=\"flex h-8 w-8 p-0 data-[state=open]:bg-muted\">\n          <DotsHorizontalIcon className=\"h-4 w-4\" />\n          <span className=\"sr-only\">Open menu</span>\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\" className=\"w-[160px]\">\n        <DropdownMenuItem>Edit</DropdownMenuItem>\n        <DropdownMenuItem>Make a copy</DropdownMenuItem>\n        <DropdownMenuItem>Favorite</DropdownMenuItem>\n        <DropdownMenuSeparator />\n        <DropdownMenuSub>\n          <DropdownMenuSubTrigger>Labels</DropdownMenuSubTrigger>\n          <DropdownMenuSubContent>\n            <DropdownMenuRadioGroup value={task.label}>\n              {labels.map(label => <DropdownMenuRadioItem key={label.value} value={label.value}>\n                  {label.label}\n                </DropdownMenuRadioItem>)}\n            </DropdownMenuRadioGroup>\n          </DropdownMenuSubContent>\n        </DropdownMenuSub>\n        <DropdownMenuSeparator />\n        <DropdownMenuItem>\n          Delete\n          <DropdownMenuShortcut>\u2318\u232B</DropdownMenuShortcut>\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>;\n}\n_c = DataTableRowActions;\nvar _c;\n$RefreshReg$(_c, \"DataTableRowActions\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAI,aAAa;AACjB,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EACA;AACA,cAAY,IAAI,eAAe;AAC/B;AAcO,IAAM,SAAS;AAAA,EACpB;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,IACP,OAAO;AAAA,IACT,SAAS;AAAA,EACT;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,IACP,OAAO;AAAA,IACP,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,IACP,OAAO;AAAA,IACP,SAAS;AAAA,EACX;AACF;AAEO,IAAM,WAAW;AAAA,EACtB;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AACF;AAEO,IAAM,aAAa;AAAA,EACxB;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AACF;;;ACrFA,IAAI,aAAa;AACjB,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EACA;AACA,cAAY,IAAI,eAAe;AAC/B;AAOO,IAAM,aAAa,EAAE,OAAO;AAAA,EACjC,IAAI,EAAE,OAAO;AAAA,EACb,OAAO,EAAE,OAAO;AAAA,EAChB,QAAQ,EAAE,OAAO;AAAA,EACjB,OAAO,EAAE,OAAO;AAAA,EAChB,UAAU,EAAE,OAAO;AACrB,CAAC;;;ACWS;AA/BV,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,2DAA6D,EAAE;AAAA,EACxG;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAkD;AAClD,cAAY,IAAI,eAAe;AACjC;AAQO,SAAS,oBAAoB;AAAA,EAClC;AACF,GAAG;AACD,QAAM,OAAO,WAAW,MAAM,IAAI,QAAQ;AAC1C,SAAO,mDAAC,gBACJ;AAAA,uDAAC,uBAAoB,SAAO,MAC1B,6DAAC,UAAO,SAAQ,SAAQ,WAAU,+CAChC;AAAA,yDAAC,sBAAmB,WAAU,aAA9B;AAAA;AAAA;AAAA;AAAA,aAAwC;AAAA,MACxC,mDAAC,UAAK,WAAU,WAAU,yBAA1B;AAAA;AAAA;AAAA;AAAA,aAAmC;AAAA,SAFrC;AAAA;AAAA;AAAA;AAAA,WAGA,KAJF;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IACA,mDAAC,uBAAoB,OAAM,OAAM,WAAU,aACzC;AAAA,yDAAC,oBAAiB,oBAAlB;AAAA;AAAA;AAAA;AAAA,aAAsB;AAAA,MACtB,mDAAC,oBAAiB,2BAAlB;AAAA;AAAA;AAAA;AAAA,aAA6B;AAAA,MAC7B,mDAAC,oBAAiB,wBAAlB;AAAA;AAAA;AAAA;AAAA,aAA0B;AAAA,MAC1B,mDAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,aAAuB;AAAA,MACvB,mDAAC,mBACC;AAAA,2DAAC,0BAAuB,sBAAxB;AAAA;AAAA;AAAA;AAAA,eAA8B;AAAA,QAC9B,mDAAC,0BACC,6DAAC,0BAAuB,OAAO,KAAK,OACjC,iBAAO,IAAI,WAAS,mDAAC,yBAAwC,OAAO,MAAM,OACtE,gBAAM,SADsC,MAAM,OAAlC;AAAA;AAAA;AAAA;AAAA,eAEnB,CAAwB,KAH5B;AAAA;AAAA;AAAA;AAAA,eAIA,KALF;AAAA;AAAA;AAAA;AAAA,eAMA;AAAA,WARF;AAAA;AAAA;AAAA;AAAA,aASA;AAAA,MACA,mDAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,aAAuB;AAAA,MACvB,mDAAC,oBAAiB;AAAA;AAAA,QAEhB,mDAAC,wBAAqB,4BAAtB;AAAA;AAAA;AAAA;AAAA,eAAwB;AAAA,WAF1B;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,SAnBF;AAAA;AAAA;AAAA;AAAA,WAoBA;AAAA,OA3BG;AAAA;AAAA;AAAA;AAAA,SA4BL;AACJ;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,qBAAqB;AAEtC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
