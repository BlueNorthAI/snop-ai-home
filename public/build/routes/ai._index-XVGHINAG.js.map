{
  "version": 3,
  "sources": ["../../../app/routes/ai._index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\ai._index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\ai._index.tsx\");\n  import.meta.hot.lastModified = \"1710143028736.806\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { Chat } from \"~/components/chat\";\nimport { SidebarDesktop } from \"~/components/sidebar-desktop\";\nimport { nanoid } from \"~/lib/utils\";\nimport { getChats } from \"~/models/chat.server\";\nimport { requireUserId } from \"~/session.server\";\nexport const loader = async ({\n  request\n}) => {\n  const userId = await requireUserId(request);\n  const chats = await getChats(userId);\n  if (!chats) {\n    throw new Response(\"Not Found\", {\n      status: 404\n    });\n  }\n  return json({\n    chats\n  });\n};\nexport default function ChatLayout() {\n  const id = nanoid();\n  // console.log(\"id\", id);\n  return <div className=\"relative flex h-[calc(100vh_-_theme(spacing.16))] overflow-hidden\">\n      <SidebarDesktop />\n      <div className=\"group w-full overflow-auto pl-0 animate-in duration-300 ease-in-out peer-[[data-state=open]]:lg:pl-[250px] peer-[[data-state=open]]:xl:pl-[300px]\">\n        <Chat id={id} />\n      </div>\n    </div>;\n}\n_c = ChatLayout;\nvar _c;\n$RefreshReg$(_c, \"ChatLayout\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA,kBAAqB;AAIrB,IAAAA,eAAyB;AACzB,qBAA8B;AAmBxB;AA3CN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,qCAAuC,EAAE;AAAA,EAClF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA4B;AAC5B,cAAY,IAAI,eAAe;AACjC;AAuBe,SAAR,aAA8B;AACnC,QAAM,KAAK,OAAO;AAElB,SAAO,mDAAC,SAAI,WAAU,qEAClB;AAAA,uDAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,WAAgB;AAAA,IAChB,mDAAC,SAAI,WAAU,qJACb,6DAAC,QAAK,MAAN;AAAA;AAAA;AAAA;AAAA,WAAc,KADhB;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAJG;AAAA;AAAA;AAAA;AAAA,SAKL;AACJ;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,YAAY;AAE7B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_chat"]
}
