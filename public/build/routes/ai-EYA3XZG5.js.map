{
  "version": 3,
  "sources": ["../../../app/routes/ai.tsx", "../../../app/components/header.tsx", "../../../app/components/ui/navigation-menu.tsx", "../../../node_modules/@radix-ui/react-use-previous/dist/packages/react/use-previous/src/index.ts", "../../../node_modules/@radix-ui/react-use-previous/dist/packages/react/use-previous/src/usePrevious.tsx", "../../../node_modules/@radix-ui/react-navigation-menu/dist/packages/react/navigation-menu/src/index.ts", "../../../node_modules/@radix-ui/react-navigation-menu/dist/packages/react/navigation-menu/src/NavigationMenu.tsx", "../../../node_modules/remix-utils/browser/react/client-only.js", "../../../node_modules/remix-utils/browser/react/use-hydrated.js", "../../../app/components/user-menu.tsx", "../../../app/components/ui/sheet.tsx", "../../../app/components/sidebar-mobile.tsx", "../../../app/components/sidebar-toggle.tsx", "../../../app/components/providers.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\ai.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\ai.tsx\");\n  import.meta.hot.lastModified = \"1710131653000\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { Outlet } from \"@remix-run/react\";\nimport { Toaster } from \"react-hot-toast\";\nimport { Header } from \"~/components/header\";\nimport { Providers } from \"~/components/providers\";\nimport { nanoid } from \"~/lib/utils\";\nimport { clearChats, removeChat, shareChat } from \"~/models/chat.server\";\nimport { requireUserId } from \"~/session.server\";\nexport const action = async ({\n  request\n}) => {\n  const userId = await requireUserId(request);\n  const formData = await request.formData();\n  const id = String(formData.get(\"id\"));\n  // const path = String(formData.get(\"path\"));\n  const intent = String(formData.get(\"intent\"));\n  if (intent === \"delete\") {\n    const result = await removeChat({\n      id,\n      userId: userId\n    });\n    return json({\n      result\n    });\n  }\n  if (intent === \"share\") {\n    const result = await shareChat(id, userId);\n    console.log(\"result\", result);\n    return json({\n      result\n    });\n  }\n  if (intent === \"clear\") {\n    const result = await clearChats(userId);\n    return json({\n      result\n    });\n  }\n\n  // Return a success response\n  return redirect(\"/ai\");\n};\n\n// export const loader = async ({ request }: LoaderFunctionArgs) => {\n//   const userId = await requireUserId(request);\n//   const chats = await getChats(userId);\n//   console.log(\"chats\", chats, userId);\n\n//   return json({ chats });\n// };\n\n// export const action = async ({ request }: LoaderFunctionArgs) => {\n//   const userId = await requireUserId(request);\n//   const formData = await request.formData();\n//   const id = String(formData.get(\"id\"));\n//   const intent = String(formData.get(\"intent\"));\n\n//   if (intent === \"delete\") {\n//     const result = await removeChat({ id, userId: userId });\n//     if (result && \"error\" in result) {\n//       return json({ error: result.error }, { status: 400 });\n//     }\n//   }\n\n//   if (intent === \"share\") {\n//     const result = await shareChat(id, userId);\n//     if (result && \"error\" in result) {\n//       return json({ error: result.error }, { status: 400 });\n//     }\n//   }\n//   return redirect(\"/\");\n// }\n\nexport default function Ai() {\n  // const user = useUser();\n  const id = nanoid();\n  console.log(\"id\", id);\n  return <div>\n      <Toaster />\n      <Providers attribute=\"class\" defaultTheme=\"system\" enableSystem disableTransitionOnChange>\n        <div className=\"flex flex-col min-h-screen\">\n          <Header />\n          <main className=\"flex flex-col flex-1 bg-muted/50\">\n            <Outlet />\n          </main>\n        </div>\n      </Providers>\n    </div>;\n}\n_c = Ai;\nvar _c;\n$RefreshReg$(_c, \"Ai\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\header.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\header.tsx\");\n  import.meta.hot.lastModified = \"1710306511320.8894\";\n}\n// REMIX HMR END\n\nimport { Link } from \"@remix-run/react\";\nimport React from \"react\";\nimport { Button } from \"~/components/ui/button\";\nimport { IconNextChat, IconSeparator } from \"~/components/ui/icons\";\nimport { NavigationMenu, NavigationMenuContent, NavigationMenuItem, NavigationMenuLink, NavigationMenuList, NavigationMenuTrigger } from \"~/components/ui/navigation-menu\";\nimport { UserMenu } from \"~/components/user-menu\";\nimport { cn } from \"~/lib/utils\";\nimport { useUser } from \"~/utils\";\nimport { ChatHistory } from \"./chat-history\";\nimport { SidebarMobile } from \"./sidebar-mobile\";\nimport { SidebarToggle } from \"./sidebar-toggle\";\nconst components = [{\n  title: \"Overview\",\n  href: \"/docs/primitives/alert-dialog\",\n  description: \"A modal dialog that interrupts the user with important content and expects a response.\"\n}, {\n  title: \"Demand\",\n  href: \"/docs/primitives/hover-card\",\n  description: \"For sighted users to preview content available behind a link.\"\n}, {\n  title: \"Supply\",\n  href: \"/docs/primitives/progress\",\n  description: \"Displays an indicator showing the completion progress of a task, typically displayed as a progress bar.\"\n}, {\n  title: \"Spend\",\n  href: \"/docs/primitives/scroll-area\",\n  description: \"Visually or semantically separates content.\"\n}, {\n  title: \"Sales\",\n  href: \"/docs/primitives/tabs\",\n  description: \"A set of layered sections of content\u2014known as tab panels\u2014that are displayed one at a time.\"\n}, {\n  title: \"Finance\",\n  href: \"/docs/primitives/tooltip\",\n  description: \"A popup that displays information related to an element when the element receives keyboard focus or the mouse hovers over it.\"\n}];\nconst ListItem = React.forwardRef(_c = ({\n  className,\n  title,\n  children,\n  ...props\n}, ref) => {\n  return <li>\n      <NavigationMenuLink asChild>\n        <a ref={ref} className={cn(\"block select-none space-y-1 rounded-md p-3 leading-none no-underline outline-none transition-colors  hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground\", className)} {...props}>\n          <div className=\"text-sm font-medium leading-none\">{title}</div>\n          <p className=\"line-clamp-2 text-sm leading-snug text-muted-foreground\">\n            {children}\n          </p>\n        </a>\n      </NavigationMenuLink>\n    </li>;\n});\n_c2 = ListItem;\nListItem.displayName = \"ListItem\";\nfunction UserOrLogin() {\n  _s();\n  const user = useUser();\n  // const user = \"shrikanth@bluenorthai.com\"\n  return <>\n      {user ? <>\n          <SidebarMobile>\n            <ChatHistory userId={user.id} />\n          </SidebarMobile>\n          <SidebarToggle />\n        </> : <Link to=\"/\" target=\"_blank\" rel=\"nofollow\">\n          <IconNextChat className=\"size-6 mr-2 dark:hidden\" inverted />\n          <IconNextChat className=\"hidden size-6 mr-2 dark:block\" />\n        </Link>}\n      <div className=\"flex items-center \">\n        <IconSeparator className=\"size-6 text-muted-foreground/50\" />\n        {user ? <UserMenu /> : <Button variant=\"link\" asChild className=\"-ml-2\">\n            <Link to=\"/sign-in?callbackUrl=/\">Login</Link>\n          </Button>}\n      </div>\n    </>;\n}\n_s(UserOrLogin, \"BPnln+wUpxLjLAxQmw7xYz9C+QI=\", false, function () {\n  return [useUser];\n});\n_c3 = UserOrLogin;\nexport function Header() {\n  return <header className=\"sticky top-0 z-50 flex items-center justify-between w-full h-16 px-4 border-b shrink-0 bg-[#272e62]\">\n      <div className=\"flex items-center text-white text-lg \">\n        <React.Suspense fallback={<div className=\"flex-1 overflow-auto\" />}>\n          <UserOrLogin />\n        </React.Suspense>\n      </div>\n\n      <div className=\"flex items-center justify-end space-x-2\">\n        <div>\n          <NavigationMenu>\n            <NavigationMenuList>\n              <NavigationMenuItem>\n                <NavigationMenuTrigger className=\"bg-sky-500 text-white\">\n                  Avatars\n                </NavigationMenuTrigger>\n                <NavigationMenuContent>\n                  <ul className=\"grid w-[400px] gap-3 p-4 md:w-[500px] md:grid-cols-2 lg:w-[600px]\">\n                    {components.map(component => <ListItem key={component.title} title={component.title} href={component.href}>\n                        {component.description}\n                      </ListItem>)}\n                  </ul>\n                </NavigationMenuContent>\n              </NavigationMenuItem>\n            </NavigationMenuList>\n          </NavigationMenu>\n        </div>\n        \n        <Link target=\"_blank\" to=\"/ai/explore\" rel=\"noopener noreferrer\" className=\" hover:bg-sky-500/20 text-white font-semibold rounded-lg p-3 flex items-center space-x-2 border border-sky-500\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"w-5 h-5\">\n            <path d=\"M15 6v12a3 3 0 1 0 3-3H6a3 3 0 1 0 3 3V6a3 3 0 1 0-3 3h12a3 3 0 1 0-3-3\"></path>\n          </svg>\n          {/* <IconGitHub /> */}\n        </Link>\n      </div>\n    </header>;\n}\n_c4 = Header;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ListItem$React.forwardRef\");\n$RefreshReg$(_c2, \"ListItem\");\n$RefreshReg$(_c3, \"UserOrLogin\");\n$RefreshReg$(_c4, \"Header\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\ui\\\\\\\\navigation-menu.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\ui\\\\navigation-menu.tsx\");\n  import.meta.hot.lastModified = \"1710306669211.007\";\n}\n// REMIX HMR END\n\nimport * as React from \"react\";\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\";\nimport { cva } from \"class-variance-authority\";\nimport { ChevronDown } from \"lucide-react\";\nimport { cn } from \"~/lib/utils\";\nconst NavigationMenu = React.forwardRef(_c = ({\n  className,\n  children,\n  ...props\n}, ref) => <NavigationMenuPrimitive.Root ref={ref} className={cn(\"relative z-10 flex max-w-max flex-1 items-center justify-center\", className)} {...props}>\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>);\n_c2 = NavigationMenu;\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName;\nconst NavigationMenuList = React.forwardRef(_c3 = ({\n  className,\n  ...props\n}, ref) => <NavigationMenuPrimitive.List ref={ref} className={cn(\"group flex flex-1 list-none items-center justify-center space-x-1\", className)} {...props} />);\n_c4 = NavigationMenuList;\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName;\nconst NavigationMenuItem = NavigationMenuPrimitive.Item;\nconst navigationMenuTriggerStyle = cva(\"group inline-flex h-10 w-max items-center justify-center rounded-md bg-white px-4 py-2 text-sm font-medium transition-colors hover:bg-slate-100 hover:text-slate-900 focus:bg-slate-100 focus:text-slate-900 focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-slate-100/50 data-[state=open]:bg-slate-100/50 dark:bg-slate-950 dark:hover:bg-slate-800 dark:hover:text-slate-50 dark:focus:bg-slate-800 dark:focus:text-slate-50 dark:data-[active]:bg-slate-800/50 dark:data-[state=open]:bg-slate-800/50\");\nconst NavigationMenuTrigger = React.forwardRef(_c5 = ({\n  className,\n  children,\n  ...props\n}, ref) => <NavigationMenuPrimitive.Trigger ref={ref} className={cn(navigationMenuTriggerStyle(), \"group\", className)} {...props}>\n    {children}{\"\"}\n    <ChevronDown className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\" aria-hidden=\"true\" />\n  </NavigationMenuPrimitive.Trigger>);\n_c6 = NavigationMenuTrigger;\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName;\nconst NavigationMenuContent = React.forwardRef(_c7 = ({\n  className,\n  ...props\n}, ref) => <NavigationMenuPrimitive.Content ref={ref} className={cn(\"top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto\", className)} {...props} />);\n_c8 = NavigationMenuContent;\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName;\nconst NavigationMenuLink = NavigationMenuPrimitive.Link;\nconst NavigationMenuViewport = React.forwardRef(_c9 = ({\n  className,\n  ...props\n}, ref) => <div className={cn(\"absolute top-full flex justify-start mr-96\")}>\n    <NavigationMenuPrimitive.Viewport className={cn(\"origin-top-left relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border border-slate-200 bg-white text-slate-950 shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)] dark:border-slate-800 dark:bg-slate-950 dark:text-slate-50\", className)} ref={ref} {...props} />\n  </div>);\n_c10 = NavigationMenuViewport;\nNavigationMenuViewport.displayName = NavigationMenuPrimitive.Viewport.displayName;\nconst NavigationMenuIndicator = React.forwardRef(_c11 = ({\n  className,\n  ...props\n}, ref) => <NavigationMenuPrimitive.Indicator ref={ref} className={cn(\"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\", className)} {...props}>\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-slate-200 shadow-md dark:bg-slate-800\" />\n  </NavigationMenuPrimitive.Indicator>);\n_c12 = NavigationMenuIndicator;\nNavigationMenuIndicator.displayName = NavigationMenuPrimitive.Indicator.displayName;\nexport { navigationMenuTriggerStyle, NavigationMenu, NavigationMenuList, NavigationMenuItem, NavigationMenuContent, NavigationMenuTrigger, NavigationMenuLink, NavigationMenuIndicator, NavigationMenuViewport };\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"NavigationMenu$React.forwardRef\");\n$RefreshReg$(_c2, \"NavigationMenu\");\n$RefreshReg$(_c3, \"NavigationMenuList$React.forwardRef\");\n$RefreshReg$(_c4, \"NavigationMenuList\");\n$RefreshReg$(_c5, \"NavigationMenuTrigger$React.forwardRef\");\n$RefreshReg$(_c6, \"NavigationMenuTrigger\");\n$RefreshReg$(_c7, \"NavigationMenuContent$React.forwardRef\");\n$RefreshReg$(_c8, \"NavigationMenuContent\");\n$RefreshReg$(_c9, \"NavigationMenuViewport$React.forwardRef\");\n$RefreshReg$(_c10, \"NavigationMenuViewport\");\n$RefreshReg$(_c11, \"NavigationMenuIndicator$React.forwardRef\");\n$RefreshReg$(_c12, \"NavigationMenuIndicator\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "export { usePrevious } from './usePrevious';\n", "import * as React from 'react';\n\nfunction usePrevious<T>(value: T) {\n  const ref = React.useRef({ value, previous: value });\n\n  // We compare values before making an update to ensure that\n  // a change has been made. This ensures the previous value is\n  // persisted correctly between renders.\n  return React.useMemo(() => {\n    if (ref.current.value !== value) {\n      ref.current.previous = ref.current.value;\n      ref.current.value = value;\n    }\n    return ref.current.previous;\n  }, [value]);\n}\n\nexport { usePrevious };\n", "export {\n  createNavigationMenuScope,\n  //\n  NavigationMenu,\n  NavigationMenuSub,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuContent,\n  NavigationMenuViewport,\n  //\n  Root,\n  Sub,\n  List,\n  Item,\n  Trigger,\n  Link,\n  Indicator,\n  Content,\n  Viewport,\n} from './NavigationMenu';\nexport type {\n  NavigationMenuProps,\n  NavigationMenuSubProps,\n  NavigationMenuListProps,\n  NavigationMenuItemProps,\n  NavigationMenuTriggerProps,\n  NavigationMenuLinkProps,\n  NavigationMenuIndicatorProps,\n  NavigationMenuContentProps,\n  NavigationMenuViewportProps,\n} from './NavigationMenu';\n", "/// <reference types=\"resize-observer-browser\" />\n\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { composeRefs, useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { Presence } from '@radix-ui/react-presence';\nimport { useId } from '@radix-ui/react-id';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport * as VisuallyHiddenPrimitive from '@radix-ui/react-visually-hidden';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Orientation = 'vertical' | 'horizontal';\ntype Direction = 'ltr' | 'rtl';\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenu\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAVIGATION_MENU_NAME = 'NavigationMenu';\n\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  NavigationMenuTriggerElement,\n  { value: string }\n>(NAVIGATION_MENU_NAME);\n\nconst [FocusGroupCollection, useFocusGroupCollection, createFocusGroupCollectionScope] =\n  createCollection<FocusGroupItemElement, {}>(NAVIGATION_MENU_NAME);\n\ntype ScopedProps<P> = P & { __scopeNavigationMenu?: Scope };\nconst [createNavigationMenuContext, createNavigationMenuScope] = createContextScope(\n  NAVIGATION_MENU_NAME,\n  [createCollectionScope, createFocusGroupCollectionScope]\n);\n\ntype ContentData = {\n  ref?: React.Ref<ViewportContentMounterElement>;\n} & ViewportContentMounterProps;\n\ntype NavigationMenuContextValue = {\n  isRootMenu: boolean;\n  value: string;\n  previousValue: string;\n  baseId: string;\n  dir: Direction;\n  orientation: Orientation;\n  rootNavigationMenu: NavigationMenuElement | null;\n  indicatorTrack: HTMLDivElement | null;\n  onIndicatorTrackChange(indicatorTrack: HTMLDivElement | null): void;\n  viewport: NavigationMenuViewportElement | null;\n  onViewportChange(viewport: NavigationMenuViewportElement | null): void;\n  onViewportContentChange(contentValue: string, contentData: ContentData): void;\n  onViewportContentRemove(contentValue: string): void;\n  onTriggerEnter(itemValue: string): void;\n  onTriggerLeave(): void;\n  onContentEnter(): void;\n  onContentLeave(): void;\n  onItemSelect(itemValue: string): void;\n  onItemDismiss(): void;\n};\n\nconst [NavigationMenuProviderImpl, useNavigationMenuContext] =\n  createNavigationMenuContext<NavigationMenuContextValue>(NAVIGATION_MENU_NAME);\n\nconst [ViewportContentProvider, useViewportContentContext] = createNavigationMenuContext<{\n  items: Map<string, ContentData>;\n}>(NAVIGATION_MENU_NAME);\n\ntype NavigationMenuElement = React.ElementRef<typeof Primitive.nav>;\ntype PrimitiveNavProps = Radix.ComponentPropsWithoutRef<typeof Primitive.nav>;\ninterface NavigationMenuProps\n  extends Omit<NavigationMenuProviderProps, keyof NavigationMenuProviderPrivateProps>,\n    PrimitiveNavProps {\n  value?: string;\n  defaultValue?: string;\n  onValueChange?: (value: string) => void;\n  dir?: Direction;\n  orientation?: Orientation;\n  /**\n   * The duration from when the pointer enters the trigger until the tooltip gets opened.\n   * @defaultValue 200\n   */\n  delayDuration?: number;\n  /**\n   * How much time a user has to enter another trigger without incurring a delay again.\n   * @defaultValue 300\n   */\n  skipDelayDuration?: number;\n}\n\nconst NavigationMenu = React.forwardRef<NavigationMenuElement, NavigationMenuProps>(\n  (props: ScopedProps<NavigationMenuProps>, forwardedRef) => {\n    const {\n      __scopeNavigationMenu,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      delayDuration = 200,\n      skipDelayDuration = 300,\n      orientation = 'horizontal',\n      dir,\n      ...NavigationMenuProps\n    } = props;\n    const [navigationMenu, setNavigationMenu] = React.useState<NavigationMenuElement | null>(null);\n    const composedRef = useComposedRefs(forwardedRef, (node) => setNavigationMenu(node));\n    const direction = useDirection(dir);\n    const openTimerRef = React.useRef(0);\n    const closeTimerRef = React.useRef(0);\n    const skipDelayTimerRef = React.useRef(0);\n    const [isOpenDelayed, setIsOpenDelayed] = React.useState(true);\n    const [value = '', setValue] = useControllableState({\n      prop: valueProp,\n      onChange: (value) => {\n        const isOpen = value !== '';\n        const hasSkipDelayDuration = skipDelayDuration > 0;\n\n        if (isOpen) {\n          window.clearTimeout(skipDelayTimerRef.current);\n          if (hasSkipDelayDuration) setIsOpenDelayed(false);\n        } else {\n          window.clearTimeout(skipDelayTimerRef.current);\n          skipDelayTimerRef.current = window.setTimeout(\n            () => setIsOpenDelayed(true),\n            skipDelayDuration\n          );\n        }\n\n        onValueChange?.(value);\n      },\n      defaultProp: defaultValue,\n    });\n\n    const startCloseTimer = React.useCallback(() => {\n      window.clearTimeout(closeTimerRef.current);\n      closeTimerRef.current = window.setTimeout(() => setValue(''), 150);\n    }, [setValue]);\n\n    const handleOpen = React.useCallback(\n      (itemValue: string) => {\n        window.clearTimeout(closeTimerRef.current);\n        setValue(itemValue);\n      },\n      [setValue]\n    );\n\n    const handleDelayedOpen = React.useCallback(\n      (itemValue: string) => {\n        const isOpenItem = value === itemValue;\n        if (isOpenItem) {\n          // If the item is already open (e.g. we're transitioning from the content to the trigger)\n          // then we want to clear the close timer immediately.\n          window.clearTimeout(closeTimerRef.current);\n        } else {\n          openTimerRef.current = window.setTimeout(() => {\n            window.clearTimeout(closeTimerRef.current);\n            setValue(itemValue);\n          }, delayDuration);\n        }\n      },\n      [value, setValue, delayDuration]\n    );\n\n    React.useEffect(() => {\n      return () => {\n        window.clearTimeout(openTimerRef.current);\n        window.clearTimeout(closeTimerRef.current);\n        window.clearTimeout(skipDelayTimerRef.current);\n      };\n    }, []);\n\n    return (\n      <NavigationMenuProvider\n        scope={__scopeNavigationMenu}\n        isRootMenu={true}\n        value={value}\n        dir={direction}\n        orientation={orientation}\n        rootNavigationMenu={navigationMenu}\n        onTriggerEnter={(itemValue) => {\n          window.clearTimeout(openTimerRef.current);\n          if (isOpenDelayed) handleDelayedOpen(itemValue);\n          else handleOpen(itemValue);\n        }}\n        onTriggerLeave={() => {\n          window.clearTimeout(openTimerRef.current);\n          startCloseTimer();\n        }}\n        onContentEnter={() => window.clearTimeout(closeTimerRef.current)}\n        onContentLeave={startCloseTimer}\n        onItemSelect={(itemValue) => {\n          setValue((prevValue) => (prevValue === itemValue ? '' : itemValue));\n        }}\n        onItemDismiss={() => setValue('')}\n      >\n        <Primitive.nav\n          aria-label=\"Main\"\n          data-orientation={orientation}\n          dir={direction}\n          {...NavigationMenuProps}\n          ref={composedRef}\n        />\n      </NavigationMenuProvider>\n    );\n  }\n);\n\nNavigationMenu.displayName = NAVIGATION_MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuSub\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_NAME = 'NavigationMenuSub';\n\ntype NavigationMenuSubElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface NavigationMenuSubProps\n  extends Omit<NavigationMenuProviderProps, keyof NavigationMenuProviderPrivateProps>,\n    PrimitiveDivProps {\n  value?: string;\n  defaultValue?: string;\n  onValueChange?: (value: string) => void;\n  orientation?: Orientation;\n}\n\nconst NavigationMenuSub = React.forwardRef<NavigationMenuSubElement, NavigationMenuSubProps>(\n  (props: ScopedProps<NavigationMenuSubProps>, forwardedRef) => {\n    const {\n      __scopeNavigationMenu,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      orientation = 'horizontal',\n      ...subProps\n    } = props;\n    const context = useNavigationMenuContext(SUB_NAME, __scopeNavigationMenu);\n    const [value = '', setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue,\n    });\n\n    return (\n      <NavigationMenuProvider\n        scope={__scopeNavigationMenu}\n        isRootMenu={false}\n        value={value}\n        dir={context.dir}\n        orientation={orientation}\n        rootNavigationMenu={context.rootNavigationMenu}\n        onTriggerEnter={(itemValue) => setValue(itemValue)}\n        onItemSelect={(itemValue) => setValue(itemValue)}\n        onItemDismiss={() => setValue('')}\n      >\n        <Primitive.div data-orientation={orientation} {...subProps} ref={forwardedRef} />\n      </NavigationMenuProvider>\n    );\n  }\n);\n\nNavigationMenuSub.displayName = SUB_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ninterface NavigationMenuProviderPrivateProps {\n  isRootMenu: boolean;\n  scope: Scope;\n  children: React.ReactNode;\n  orientation: Orientation;\n  dir: Direction;\n  rootNavigationMenu: NavigationMenuElement | null;\n  value: string;\n  onTriggerEnter(itemValue: string): void;\n  onTriggerLeave?(): void;\n  onContentEnter?(): void;\n  onContentLeave?(): void;\n  onItemSelect(itemValue: string): void;\n  onItemDismiss(): void;\n}\n\ninterface NavigationMenuProviderProps extends NavigationMenuProviderPrivateProps {}\n\nconst NavigationMenuProvider: React.FC<NavigationMenuProviderProps> = (\n  props: ScopedProps<NavigationMenuProviderProps>\n) => {\n  const {\n    scope,\n    isRootMenu,\n    rootNavigationMenu,\n    dir,\n    orientation,\n    children,\n    value,\n    onItemSelect,\n    onItemDismiss,\n    onTriggerEnter,\n    onTriggerLeave,\n    onContentEnter,\n    onContentLeave,\n  } = props;\n  const [viewport, setViewport] = React.useState<NavigationMenuViewportElement | null>(null);\n  const [viewportContent, setViewportContent] = React.useState<Map<string, ContentData>>(new Map());\n  const [indicatorTrack, setIndicatorTrack] = React.useState<HTMLDivElement | null>(null);\n\n  return (\n    <NavigationMenuProviderImpl\n      scope={scope}\n      isRootMenu={isRootMenu}\n      rootNavigationMenu={rootNavigationMenu}\n      value={value}\n      previousValue={usePrevious(value)}\n      baseId={useId()}\n      dir={dir}\n      orientation={orientation}\n      viewport={viewport}\n      onViewportChange={setViewport}\n      indicatorTrack={indicatorTrack}\n      onIndicatorTrackChange={setIndicatorTrack}\n      onTriggerEnter={useCallbackRef(onTriggerEnter)}\n      onTriggerLeave={useCallbackRef(onTriggerLeave)}\n      onContentEnter={useCallbackRef(onContentEnter)}\n      onContentLeave={useCallbackRef(onContentLeave)}\n      onItemSelect={useCallbackRef(onItemSelect)}\n      onItemDismiss={useCallbackRef(onItemDismiss)}\n      onViewportContentChange={React.useCallback((contentValue, contentData) => {\n        setViewportContent((prevContent) => {\n          prevContent.set(contentValue, contentData);\n          return new Map(prevContent);\n        });\n      }, [])}\n      onViewportContentRemove={React.useCallback((contentValue) => {\n        setViewportContent((prevContent) => {\n          if (!prevContent.has(contentValue)) return prevContent;\n          prevContent.delete(contentValue);\n          return new Map(prevContent);\n        });\n      }, [])}\n    >\n      <Collection.Provider scope={scope}>\n        <ViewportContentProvider scope={scope} items={viewportContent}>\n          {children}\n        </ViewportContentProvider>\n      </Collection.Provider>\n    </NavigationMenuProviderImpl>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuList\n * -----------------------------------------------------------------------------------------------*/\n\nconst LIST_NAME = 'NavigationMenuList';\n\ntype NavigationMenuListElement = React.ElementRef<typeof Primitive.ul>;\ntype PrimitiveUnorderedListProps = Radix.ComponentPropsWithoutRef<typeof Primitive.ul>;\ninterface NavigationMenuListProps extends PrimitiveUnorderedListProps {}\n\nconst NavigationMenuList = React.forwardRef<NavigationMenuListElement, NavigationMenuListProps>(\n  (props: ScopedProps<NavigationMenuListProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, ...listProps } = props;\n    const context = useNavigationMenuContext(LIST_NAME, __scopeNavigationMenu);\n\n    const list = (\n      <Primitive.ul data-orientation={context.orientation} {...listProps} ref={forwardedRef} />\n    );\n\n    return (\n      <Primitive.div style={{ position: 'relative' }} ref={context.onIndicatorTrackChange}>\n        <Collection.Slot scope={__scopeNavigationMenu}>\n          {context.isRootMenu ? <FocusGroup asChild>{list}</FocusGroup> : list}\n        </Collection.Slot>\n      </Primitive.div>\n    );\n  }\n);\n\nNavigationMenuList.displayName = LIST_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'NavigationMenuItem';\n\ntype FocusProxyElement = React.ElementRef<typeof VisuallyHiddenPrimitive.Root>;\n\ntype NavigationMenuItemContextValue = {\n  value: string;\n  triggerRef: React.RefObject<NavigationMenuTriggerElement>;\n  contentRef: React.RefObject<NavigationMenuContentElement>;\n  focusProxyRef: React.RefObject<FocusProxyElement>;\n  wasEscapeCloseRef: React.MutableRefObject<boolean>;\n  onEntryKeyDown(): void;\n  onFocusProxyEnter(side: 'start' | 'end'): void;\n  onRootContentClose(): void;\n  onContentFocusOutside(): void;\n};\n\nconst [NavigationMenuItemContextProvider, useNavigationMenuItemContext] =\n  createNavigationMenuContext<NavigationMenuItemContextValue>(ITEM_NAME);\n\ntype NavigationMenuItemElement = React.ElementRef<typeof Primitive.li>;\ntype PrimitiveListItemProps = Radix.ComponentPropsWithoutRef<typeof Primitive.li>;\ninterface NavigationMenuItemProps extends PrimitiveListItemProps {\n  value?: string;\n}\n\nconst NavigationMenuItem = React.forwardRef<NavigationMenuItemElement, NavigationMenuItemProps>(\n  (props: ScopedProps<NavigationMenuItemProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, value: valueProp, ...itemProps } = props;\n    const autoValue = useId();\n    // We need to provide an initial deterministic value as `useId` will return\n    // empty string on the first render and we don't want to match our internal \"closed\" value.\n    const value = valueProp || autoValue || 'LEGACY_REACT_AUTO_VALUE';\n    const contentRef = React.useRef<NavigationMenuContentElement>(null);\n    const triggerRef = React.useRef<NavigationMenuTriggerElement>(null);\n    const focusProxyRef = React.useRef<FocusProxyElement>(null);\n    const restoreContentTabOrderRef = React.useRef(() => {});\n    const wasEscapeCloseRef = React.useRef(false);\n\n    const handleContentEntry = React.useCallback((side = 'start') => {\n      if (contentRef.current) {\n        restoreContentTabOrderRef.current();\n        const candidates = getTabbableCandidates(contentRef.current);\n        if (candidates.length) focusFirst(side === 'start' ? candidates : candidates.reverse());\n      }\n    }, []);\n\n    const handleContentExit = React.useCallback(() => {\n      if (contentRef.current) {\n        const candidates = getTabbableCandidates(contentRef.current);\n        if (candidates.length) restoreContentTabOrderRef.current = removeFromTabOrder(candidates);\n      }\n    }, []);\n\n    return (\n      <NavigationMenuItemContextProvider\n        scope={__scopeNavigationMenu}\n        value={value}\n        triggerRef={triggerRef}\n        contentRef={contentRef}\n        focusProxyRef={focusProxyRef}\n        wasEscapeCloseRef={wasEscapeCloseRef}\n        onEntryKeyDown={handleContentEntry}\n        onFocusProxyEnter={handleContentEntry}\n        onRootContentClose={handleContentExit}\n        onContentFocusOutside={handleContentExit}\n      >\n        <Primitive.li {...itemProps} ref={forwardedRef} />\n      </NavigationMenuItemContextProvider>\n    );\n  }\n);\n\nNavigationMenuItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'NavigationMenuTrigger';\n\ntype NavigationMenuTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface NavigationMenuTriggerProps extends PrimitiveButtonProps {}\n\nconst NavigationMenuTrigger = React.forwardRef<\n  NavigationMenuTriggerElement,\n  NavigationMenuTriggerProps\n>((props: ScopedProps<NavigationMenuTriggerProps>, forwardedRef) => {\n  const { __scopeNavigationMenu, disabled, ...triggerProps } = props;\n  const context = useNavigationMenuContext(TRIGGER_NAME, props.__scopeNavigationMenu);\n  const itemContext = useNavigationMenuItemContext(TRIGGER_NAME, props.__scopeNavigationMenu);\n  const ref = React.useRef<NavigationMenuTriggerElement>(null);\n  const composedRefs = useComposedRefs(ref, itemContext.triggerRef, forwardedRef);\n  const triggerId = makeTriggerId(context.baseId, itemContext.value);\n  const contentId = makeContentId(context.baseId, itemContext.value);\n  const hasPointerMoveOpenedRef = React.useRef(false);\n  const wasClickCloseRef = React.useRef(false);\n  const open = itemContext.value === context.value;\n\n  return (\n    <>\n      <Collection.ItemSlot scope={__scopeNavigationMenu} value={itemContext.value}>\n        <FocusGroupItem asChild>\n          <Primitive.button\n            id={triggerId}\n            disabled={disabled}\n            data-disabled={disabled ? '' : undefined}\n            data-state={getOpenState(open)}\n            aria-expanded={open}\n            aria-controls={contentId}\n            {...triggerProps}\n            ref={composedRefs}\n            onPointerEnter={composeEventHandlers(props.onPointerEnter, () => {\n              wasClickCloseRef.current = false;\n              itemContext.wasEscapeCloseRef.current = false;\n            })}\n            onPointerMove={composeEventHandlers(\n              props.onPointerMove,\n              whenMouse(() => {\n                if (\n                  disabled ||\n                  wasClickCloseRef.current ||\n                  itemContext.wasEscapeCloseRef.current ||\n                  hasPointerMoveOpenedRef.current\n                )\n                  return;\n                context.onTriggerEnter(itemContext.value);\n                hasPointerMoveOpenedRef.current = true;\n              })\n            )}\n            onPointerLeave={composeEventHandlers(\n              props.onPointerLeave,\n              whenMouse(() => {\n                if (disabled) return;\n                context.onTriggerLeave();\n                hasPointerMoveOpenedRef.current = false;\n              })\n            )}\n            onClick={composeEventHandlers(props.onClick, () => {\n              context.onItemSelect(itemContext.value);\n              wasClickCloseRef.current = open;\n            })}\n            onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n              const verticalEntryKey = context.dir === 'rtl' ? 'ArrowLeft' : 'ArrowRight';\n              const entryKey = { horizontal: 'ArrowDown', vertical: verticalEntryKey }[\n                context.orientation\n              ];\n              if (open && event.key === entryKey) {\n                itemContext.onEntryKeyDown();\n                // Prevent FocusGroupItem from handling the event\n                event.preventDefault();\n              }\n            })}\n          />\n        </FocusGroupItem>\n      </Collection.ItemSlot>\n\n      {/* Proxy tab order between trigger and content */}\n      {open && (\n        <>\n          <VisuallyHiddenPrimitive.Root\n            aria-hidden\n            tabIndex={0}\n            ref={itemContext.focusProxyRef}\n            onFocus={(event) => {\n              const content = itemContext.contentRef.current;\n              const prevFocusedElement = event.relatedTarget as HTMLElement | null;\n              const wasTriggerFocused = prevFocusedElement === ref.current;\n              const wasFocusFromContent = content?.contains(prevFocusedElement);\n\n              if (wasTriggerFocused || !wasFocusFromContent) {\n                itemContext.onFocusProxyEnter(wasTriggerFocused ? 'start' : 'end');\n              }\n            }}\n          />\n\n          {/* Restructure a11y tree to make content accessible to screen reader when using the viewport */}\n          {context.viewport && <span aria-owns={contentId} />}\n        </>\n      )}\n    </>\n  );\n});\n\nNavigationMenuTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuLink\n * -----------------------------------------------------------------------------------------------*/\n\nconst LINK_NAME = 'NavigationMenuLink';\nconst LINK_SELECT = 'navigationMenu.linkSelect';\n\ntype NavigationMenuLinkElement = React.ElementRef<typeof Primitive.a>;\ntype PrimitiveLinkProps = Radix.ComponentPropsWithoutRef<typeof Primitive.a>;\ninterface NavigationMenuLinkProps extends Omit<PrimitiveLinkProps, 'onSelect'> {\n  active?: boolean;\n  onSelect?: (event: Event) => void;\n}\n\nconst NavigationMenuLink = React.forwardRef<NavigationMenuLinkElement, NavigationMenuLinkProps>(\n  (props: ScopedProps<NavigationMenuLinkProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, active, onSelect, ...linkProps } = props;\n\n    return (\n      <FocusGroupItem asChild>\n        <Primitive.a\n          data-active={active ? '' : undefined}\n          aria-current={active ? 'page' : undefined}\n          {...linkProps}\n          ref={forwardedRef}\n          onClick={composeEventHandlers(\n            props.onClick,\n            (event) => {\n              const target = event.target as HTMLElement;\n              const linkSelectEvent = new CustomEvent(LINK_SELECT, {\n                bubbles: true,\n                cancelable: true,\n              });\n              target.addEventListener(LINK_SELECT, (event) => onSelect?.(event), { once: true });\n              dispatchDiscreteCustomEvent(target, linkSelectEvent);\n\n              if (!linkSelectEvent.defaultPrevented && !event.metaKey) {\n                const rootContentDismissEvent = new CustomEvent(ROOT_CONTENT_DISMISS, {\n                  bubbles: true,\n                  cancelable: true,\n                });\n                dispatchDiscreteCustomEvent(target, rootContentDismissEvent);\n              }\n            },\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </FocusGroupItem>\n    );\n  }\n);\n\nNavigationMenuLink.displayName = LINK_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'NavigationMenuIndicator';\n\ntype NavigationMenuIndicatorElement = NavigationMenuIndicatorImplElement;\ninterface NavigationMenuIndicatorProps extends NavigationMenuIndicatorImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst NavigationMenuIndicator = React.forwardRef<\n  NavigationMenuIndicatorElement,\n  NavigationMenuIndicatorProps\n>((props: ScopedProps<NavigationMenuIndicatorProps>, forwardedRef) => {\n  const { forceMount, ...indicatorProps } = props;\n  const context = useNavigationMenuContext(INDICATOR_NAME, props.__scopeNavigationMenu);\n  const isVisible = Boolean(context.value);\n\n  return context.indicatorTrack\n    ? ReactDOM.createPortal(\n        <Presence present={forceMount || isVisible}>\n          <NavigationMenuIndicatorImpl {...indicatorProps} ref={forwardedRef} />\n        </Presence>,\n        context.indicatorTrack\n      )\n    : null;\n});\n\nNavigationMenuIndicator.displayName = INDICATOR_NAME;\n\ntype NavigationMenuIndicatorImplElement = React.ElementRef<typeof Primitive.div>;\ninterface NavigationMenuIndicatorImplProps extends PrimitiveDivProps {}\n\nconst NavigationMenuIndicatorImpl = React.forwardRef<\n  NavigationMenuIndicatorImplElement,\n  NavigationMenuIndicatorImplProps\n>((props: ScopedProps<NavigationMenuIndicatorImplProps>, forwardedRef) => {\n  const { __scopeNavigationMenu, ...indicatorProps } = props;\n  const context = useNavigationMenuContext(INDICATOR_NAME, __scopeNavigationMenu);\n  const getItems = useCollection(__scopeNavigationMenu);\n  const [activeTrigger, setActiveTrigger] = React.useState<NavigationMenuTriggerElement | null>(\n    null\n  );\n  const [position, setPosition] = React.useState<{ size: number; offset: number } | null>(null);\n  const isHorizontal = context.orientation === 'horizontal';\n  const isVisible = Boolean(context.value);\n\n  React.useEffect(() => {\n    const items = getItems();\n    const triggerNode = items.find((item) => item.value === context.value)?.ref.current;\n    if (triggerNode) setActiveTrigger(triggerNode);\n  }, [getItems, context.value]);\n\n  /**\n   * Update position when the indicator or parent track size changes\n   */\n  const handlePositionChange = () => {\n    if (activeTrigger) {\n      setPosition({\n        size: isHorizontal ? activeTrigger.offsetWidth : activeTrigger.offsetHeight,\n        offset: isHorizontal ? activeTrigger.offsetLeft : activeTrigger.offsetTop,\n      });\n    }\n  };\n  useResizeObserver(activeTrigger, handlePositionChange);\n  useResizeObserver(context.indicatorTrack, handlePositionChange);\n\n  // We need to wait for the indicator position to be available before rendering to\n  // snap immediately into position rather than transitioning from initial\n  return position ? (\n    <Primitive.div\n      aria-hidden\n      data-state={isVisible ? 'visible' : 'hidden'}\n      data-orientation={context.orientation}\n      {...indicatorProps}\n      ref={forwardedRef}\n      style={{\n        position: 'absolute',\n        ...(isHorizontal\n          ? {\n              left: 0,\n              width: position.size + 'px',\n              transform: `translateX(${position.offset}px)`,\n            }\n          : {\n              top: 0,\n              height: position.size + 'px',\n              transform: `translateY(${position.offset}px)`,\n            }),\n        ...indicatorProps.style,\n      }}\n    />\n  ) : null;\n});\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'NavigationMenuContent';\n\ntype NavigationMenuContentElement = NavigationMenuContentImplElement;\ninterface NavigationMenuContentProps\n  extends Omit<NavigationMenuContentImplProps, keyof NavigationMenuContentImplPrivateProps> {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst NavigationMenuContent = React.forwardRef<\n  NavigationMenuContentElement,\n  NavigationMenuContentProps\n>((props: ScopedProps<NavigationMenuContentProps>, forwardedRef) => {\n  const { forceMount, ...contentProps } = props;\n  const context = useNavigationMenuContext(CONTENT_NAME, props.__scopeNavigationMenu);\n  const itemContext = useNavigationMenuItemContext(CONTENT_NAME, props.__scopeNavigationMenu);\n  const composedRefs = useComposedRefs(itemContext.contentRef, forwardedRef);\n  const open = itemContext.value === context.value;\n\n  const commonProps = {\n    value: itemContext.value,\n    triggerRef: itemContext.triggerRef,\n    focusProxyRef: itemContext.focusProxyRef,\n    wasEscapeCloseRef: itemContext.wasEscapeCloseRef,\n    onContentFocusOutside: itemContext.onContentFocusOutside,\n    onRootContentClose: itemContext.onRootContentClose,\n    ...contentProps,\n  };\n\n  return !context.viewport ? (\n    <Presence present={forceMount || open}>\n      <NavigationMenuContentImpl\n        data-state={getOpenState(open)}\n        {...commonProps}\n        ref={composedRefs}\n        onPointerEnter={composeEventHandlers(props.onPointerEnter, context.onContentEnter)}\n        onPointerLeave={composeEventHandlers(\n          props.onPointerLeave,\n          whenMouse(context.onContentLeave)\n        )}\n        style={{\n          // Prevent interaction when animating out\n          pointerEvents: !open && context.isRootMenu ? 'none' : undefined,\n          ...commonProps.style,\n        }}\n      />\n    </Presence>\n  ) : (\n    <ViewportContentMounter forceMount={forceMount} {...commonProps} ref={composedRefs} />\n  );\n});\n\nNavigationMenuContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ViewportContentMounterElement = NavigationMenuContentImplElement;\ninterface ViewportContentMounterProps extends NavigationMenuContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst ViewportContentMounter = React.forwardRef<\n  ViewportContentMounterElement,\n  ViewportContentMounterProps\n>((props: ScopedProps<ViewportContentMounterProps>, forwardedRef) => {\n  const context = useNavigationMenuContext(CONTENT_NAME, props.__scopeNavigationMenu);\n  const { onViewportContentChange, onViewportContentRemove } = context;\n\n  useLayoutEffect(() => {\n    onViewportContentChange(props.value, {\n      ref: forwardedRef,\n      ...props,\n    });\n  }, [props, forwardedRef, onViewportContentChange]);\n\n  useLayoutEffect(() => {\n    return () => onViewportContentRemove(props.value);\n  }, [props.value, onViewportContentRemove]);\n\n  // Content is proxied into the viewport\n  return null;\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst ROOT_CONTENT_DISMISS = 'navigationMenu.rootContentDismiss';\n\ntype MotionAttribute = 'to-start' | 'to-end' | 'from-start' | 'from-end';\ntype NavigationMenuContentImplElement = React.ElementRef<typeof DismissableLayer>;\ntype DismissableLayerProps = Radix.ComponentPropsWithoutRef<typeof DismissableLayer>;\n\ninterface NavigationMenuContentImplPrivateProps {\n  value: string;\n  triggerRef: React.RefObject<NavigationMenuTriggerElement>;\n  focusProxyRef: React.RefObject<FocusProxyElement>;\n  wasEscapeCloseRef: React.MutableRefObject<boolean>;\n  onContentFocusOutside(): void;\n  onRootContentClose(): void;\n}\ninterface NavigationMenuContentImplProps\n  extends Omit<DismissableLayerProps, 'onDismiss'>,\n    NavigationMenuContentImplPrivateProps {}\n\nconst NavigationMenuContentImpl = React.forwardRef<\n  NavigationMenuContentImplElement,\n  NavigationMenuContentImplProps\n>((props: ScopedProps<NavigationMenuContentImplProps>, forwardedRef) => {\n  const {\n    __scopeNavigationMenu,\n    value,\n    triggerRef,\n    focusProxyRef,\n    wasEscapeCloseRef,\n    onRootContentClose,\n    onContentFocusOutside,\n    ...contentProps\n  } = props;\n  const context = useNavigationMenuContext(CONTENT_NAME, __scopeNavigationMenu);\n  const ref = React.useRef<NavigationMenuContentImplElement>(null);\n  const composedRefs = useComposedRefs(ref, forwardedRef);\n  const triggerId = makeTriggerId(context.baseId, value);\n  const contentId = makeContentId(context.baseId, value);\n  const getItems = useCollection(__scopeNavigationMenu);\n  const prevMotionAttributeRef = React.useRef<MotionAttribute | null>(null);\n\n  const { onItemDismiss } = context;\n\n  React.useEffect(() => {\n    const content = ref.current;\n\n    // Bubble dismiss to the root content node and focus its trigger\n    if (context.isRootMenu && content) {\n      const handleClose = () => {\n        onItemDismiss();\n        onRootContentClose();\n        if (content.contains(document.activeElement)) triggerRef.current?.focus();\n      };\n      content.addEventListener(ROOT_CONTENT_DISMISS, handleClose);\n      return () => content.removeEventListener(ROOT_CONTENT_DISMISS, handleClose);\n    }\n  }, [context.isRootMenu, props.value, triggerRef, onItemDismiss, onRootContentClose]);\n\n  const motionAttribute = React.useMemo(() => {\n    const items = getItems();\n    const values = items.map((item) => item.value);\n    if (context.dir === 'rtl') values.reverse();\n    const index = values.indexOf(context.value);\n    const prevIndex = values.indexOf(context.previousValue);\n    const isSelected = value === context.value;\n    const wasSelected = prevIndex === values.indexOf(value);\n\n    // We only want to update selected and the last selected content\n    // this avoids animations being interrupted outside of that range\n    if (!isSelected && !wasSelected) return prevMotionAttributeRef.current;\n\n    const attribute = (() => {\n      // Don't provide a direction on the initial open\n      if (index !== prevIndex) {\n        // If we're moving to this item from another\n        if (isSelected && prevIndex !== -1) return index > prevIndex ? 'from-end' : 'from-start';\n        // If we're leaving this item for another\n        if (wasSelected && index !== -1) return index > prevIndex ? 'to-start' : 'to-end';\n      }\n      // Otherwise we're entering from closed or leaving the list\n      // entirely and should not animate in any direction\n      return null;\n    })();\n\n    prevMotionAttributeRef.current = attribute;\n    return attribute;\n  }, [context.previousValue, context.value, context.dir, getItems, value]);\n\n  return (\n    <FocusGroup asChild>\n      <DismissableLayer\n        id={contentId}\n        aria-labelledby={triggerId}\n        data-motion={motionAttribute}\n        data-orientation={context.orientation}\n        {...contentProps}\n        ref={composedRefs}\n        onDismiss={() => {\n          const rootContentDismissEvent = new Event(ROOT_CONTENT_DISMISS, {\n            bubbles: true,\n            cancelable: true,\n          });\n          ref.current?.dispatchEvent(rootContentDismissEvent);\n        }}\n        onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) => {\n          onContentFocusOutside();\n          const target = event.target as HTMLElement;\n          // Only dismiss content when focus moves outside of the menu\n          if (context.rootNavigationMenu?.contains(target)) event.preventDefault();\n        })}\n        onPointerDownOutside={composeEventHandlers(props.onPointerDownOutside, (event) => {\n          const target = event.target as HTMLElement;\n          const isTrigger = getItems().some((item) => item.ref.current?.contains(target));\n          const isRootViewport = context.isRootMenu && context.viewport?.contains(target);\n          if (isTrigger || isRootViewport || !context.isRootMenu) event.preventDefault();\n        })}\n        onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n          const isMetaKey = event.altKey || event.ctrlKey || event.metaKey;\n          const isTabKey = event.key === 'Tab' && !isMetaKey;\n          if (isTabKey) {\n            const candidates = getTabbableCandidates(event.currentTarget);\n            const focusedElement = document.activeElement;\n            const index = candidates.findIndex((candidate) => candidate === focusedElement);\n            const isMovingBackwards = event.shiftKey;\n            const nextCandidates = isMovingBackwards\n              ? candidates.slice(0, index).reverse()\n              : candidates.slice(index + 1, candidates.length);\n\n            if (focusFirst(nextCandidates)) {\n              // prevent browser tab keydown because we've handled focus\n              event.preventDefault();\n            } else {\n              // If we can't focus that means we're at the edges\n              // so focus the proxy and let browser handle\n              // tab/shift+tab keypress on the proxy instead\n              focusProxyRef.current?.focus();\n            }\n          }\n        })}\n        onEscapeKeyDown={composeEventHandlers(props.onEscapeKeyDown, (event) => {\n          // prevent the dropdown from reopening\n          // after the escape key has been pressed\n          wasEscapeCloseRef.current = true;\n        })}\n      />\n    </FocusGroup>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuViewport\n * -----------------------------------------------------------------------------------------------*/\n\nconst VIEWPORT_NAME = 'NavigationMenuViewport';\n\ntype NavigationMenuViewportElement = NavigationMenuViewportImplElement;\ninterface NavigationMenuViewportProps\n  extends Omit<NavigationMenuViewportImplProps, 'children' | 'activeContentValue'> {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst NavigationMenuViewport = React.forwardRef<\n  NavigationMenuViewportElement,\n  NavigationMenuViewportProps\n>((props: ScopedProps<NavigationMenuViewportProps>, forwardedRef) => {\n  const { forceMount, ...viewportProps } = props;\n  const context = useNavigationMenuContext(VIEWPORT_NAME, props.__scopeNavigationMenu);\n  const open = Boolean(context.value);\n\n  return (\n    <Presence present={forceMount || open}>\n      <NavigationMenuViewportImpl {...viewportProps} ref={forwardedRef} />\n    </Presence>\n  );\n});\n\nNavigationMenuViewport.displayName = VIEWPORT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype NavigationMenuViewportImplElement = React.ElementRef<typeof Primitive.div>;\ninterface NavigationMenuViewportImplProps extends PrimitiveDivProps {}\n\nconst NavigationMenuViewportImpl = React.forwardRef<\n  NavigationMenuViewportImplElement,\n  NavigationMenuViewportImplProps\n>((props: ScopedProps<NavigationMenuViewportImplProps>, forwardedRef) => {\n  const { __scopeNavigationMenu, children, ...viewportImplProps } = props;\n  const context = useNavigationMenuContext(VIEWPORT_NAME, __scopeNavigationMenu);\n  const composedRefs = useComposedRefs(forwardedRef, context.onViewportChange);\n  const viewportContentContext = useViewportContentContext(\n    CONTENT_NAME,\n    props.__scopeNavigationMenu\n  );\n  const [size, setSize] = React.useState<{ width: number; height: number } | null>(null);\n  const [content, setContent] = React.useState<NavigationMenuContentElement | null>(null);\n  const viewportWidth = size ? size?.width + 'px' : undefined;\n  const viewportHeight = size ? size?.height + 'px' : undefined;\n  const open = Boolean(context.value);\n  // We persist the last active content value as the viewport may be animating out\n  // and we want the content to remain mounted for the lifecycle of the viewport.\n  const activeContentValue = open ? context.value : context.previousValue;\n\n  /**\n   * Update viewport size to match the active content node.\n   * We prefer offset dimensions over `getBoundingClientRect` as the latter respects CSS transform.\n   * For example, if content animates in from `scale(0.5)` the dimensions would be anything\n   * from `0.5` to `1` of the intended size.\n   */\n  const handleSizeChange = () => {\n    if (content) setSize({ width: content.offsetWidth, height: content.offsetHeight });\n  };\n  useResizeObserver(content, handleSizeChange);\n\n  return (\n    <Primitive.div\n      data-state={getOpenState(open)}\n      data-orientation={context.orientation}\n      {...viewportImplProps}\n      ref={composedRefs}\n      style={{\n        // Prevent interaction when animating out\n        pointerEvents: !open && context.isRootMenu ? 'none' : undefined,\n        ['--radix-navigation-menu-viewport-width' as any]: viewportWidth,\n        ['--radix-navigation-menu-viewport-height' as any]: viewportHeight,\n        ...viewportImplProps.style,\n      }}\n      onPointerEnter={composeEventHandlers(props.onPointerEnter, context.onContentEnter)}\n      onPointerLeave={composeEventHandlers(props.onPointerLeave, whenMouse(context.onContentLeave))}\n    >\n      {Array.from(viewportContentContext.items).map(([value, { ref, forceMount, ...props }]) => {\n        const isActive = activeContentValue === value;\n        return (\n          <Presence key={value} present={forceMount || isActive}>\n            <NavigationMenuContentImpl\n              {...props}\n              ref={composeRefs(ref, (node) => {\n                // We only want to update the stored node when another is available\n                // as we need to smoothly transition between them.\n                if (isActive && node) setContent(node);\n              })}\n            />\n          </Presence>\n        );\n      })}\n    </Primitive.div>\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst FOCUS_GROUP_NAME = 'FocusGroup';\n\ntype FocusGroupElement = React.ElementRef<typeof Primitive.div>;\ninterface FocusGroupProps extends PrimitiveDivProps {}\n\nconst FocusGroup = React.forwardRef<FocusGroupElement, FocusGroupProps>(\n  (props: ScopedProps<FocusGroupProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, ...groupProps } = props;\n    const context = useNavigationMenuContext(FOCUS_GROUP_NAME, __scopeNavigationMenu);\n\n    return (\n      <FocusGroupCollection.Provider scope={__scopeNavigationMenu}>\n        <FocusGroupCollection.Slot scope={__scopeNavigationMenu}>\n          <Primitive.div dir={context.dir} {...groupProps} ref={forwardedRef} />\n        </FocusGroupCollection.Slot>\n      </FocusGroupCollection.Provider>\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_KEYS = ['ArrowRight', 'ArrowLeft', 'ArrowUp', 'ArrowDown'];\nconst FOCUS_GROUP_ITEM_NAME = 'FocusGroupItem';\n\ntype FocusGroupItemElement = React.ElementRef<typeof Primitive.button>;\ninterface FocusGroupItemProps extends PrimitiveButtonProps {}\n\nconst FocusGroupItem = React.forwardRef<FocusGroupItemElement, FocusGroupItemProps>(\n  (props: ScopedProps<FocusGroupItemProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, ...groupProps } = props;\n    const getItems = useFocusGroupCollection(__scopeNavigationMenu);\n    const context = useNavigationMenuContext(FOCUS_GROUP_ITEM_NAME, __scopeNavigationMenu);\n\n    return (\n      <FocusGroupCollection.ItemSlot scope={__scopeNavigationMenu}>\n        <Primitive.button\n          {...groupProps}\n          ref={forwardedRef}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            const isFocusNavigationKey = ['Home', 'End', ...ARROW_KEYS].includes(event.key);\n            if (isFocusNavigationKey) {\n              let candidateNodes = getItems().map((item) => item.ref.current!);\n              const prevItemKey = context.dir === 'rtl' ? 'ArrowRight' : 'ArrowLeft';\n              const prevKeys = [prevItemKey, 'ArrowUp', 'End'];\n              if (prevKeys.includes(event.key)) candidateNodes.reverse();\n              if (ARROW_KEYS.includes(event.key)) {\n                const currentIndex = candidateNodes.indexOf(event.currentTarget);\n                candidateNodes = candidateNodes.slice(currentIndex + 1);\n              }\n              /**\n               * Imperative focus during keydown is risky so we prevent React's batching updates\n               * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n               */\n              setTimeout(() => focusFirst(candidateNodes));\n\n              // Prevent page scroll while navigating\n              event.preventDefault();\n            }\n          })}\n        />\n      </FocusGroupCollection.ItemSlot>\n    );\n  }\n);\n\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nfunction getTabbableCandidates(container: HTMLElement) {\n  const nodes: HTMLElement[] = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    },\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement);\n  // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes;\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const previouslyFocusedElement = document.activeElement;\n  return candidates.some((candidate) => {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === previouslyFocusedElement) return true;\n    candidate.focus();\n    return document.activeElement !== previouslyFocusedElement;\n  });\n}\n\nfunction removeFromTabOrder(candidates: HTMLElement[]) {\n  candidates.forEach((candidate) => {\n    candidate.dataset.tabindex = candidate.getAttribute('tabindex') || '';\n    candidate.setAttribute('tabindex', '-1');\n  });\n  return () => {\n    candidates.forEach((candidate) => {\n      const prevTabIndex = candidate.dataset.tabindex as string;\n      candidate.setAttribute('tabindex', prevTabIndex);\n    });\n  };\n}\n\nfunction useResizeObserver(element: HTMLElement | null, onResize: () => void) {\n  const handleResize = useCallbackRef(onResize);\n  useLayoutEffect(() => {\n    let rAF = 0;\n    if (element) {\n      /**\n       * Resize Observer will throw an often benign error that says `ResizeObserver loop\n       * completed with undelivered notifications`. This means that ResizeObserver was not\n       * able to deliver all observations within a single animation frame, so we use\n       * `requestAnimationFrame` to ensure we don't deliver unnecessary observations.\n       * Further reading: https://github.com/WICG/resize-observer/issues/38\n       */\n      const resizeObserver = new ResizeObserver(() => {\n        cancelAnimationFrame(rAF);\n        rAF = window.requestAnimationFrame(handleResize);\n      });\n      resizeObserver.observe(element);\n      return () => {\n        window.cancelAnimationFrame(rAF);\n        resizeObserver.unobserve(element);\n      };\n    }\n  }, [element, handleResize]);\n}\n\nfunction getOpenState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nfunction makeTriggerId(baseId: string, value: string) {\n  return `${baseId}-trigger-${value}`;\n}\n\nfunction makeContentId(baseId: string, value: string) {\n  return `${baseId}-content-${value}`;\n}\n\nfunction whenMouse<E>(handler: React.PointerEventHandler<E>): React.PointerEventHandler<E> {\n  return (event) => (event.pointerType === 'mouse' ? handler(event) : undefined);\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = NavigationMenu;\nconst Sub = NavigationMenuSub;\nconst List = NavigationMenuList;\nconst Item = NavigationMenuItem;\nconst Trigger = NavigationMenuTrigger;\nconst Link = NavigationMenuLink;\nconst Indicator = NavigationMenuIndicator;\nconst Content = NavigationMenuContent;\nconst Viewport = NavigationMenuViewport;\n\nexport {\n  createNavigationMenuScope,\n  //\n  NavigationMenu,\n  NavigationMenuSub,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuContent,\n  NavigationMenuViewport,\n  //\n  Root,\n  Sub,\n  List,\n  Item,\n  Trigger,\n  Link,\n  Indicator,\n  Content,\n  Viewport,\n};\nexport type {\n  NavigationMenuProps,\n  NavigationMenuSubProps,\n  NavigationMenuListProps,\n  NavigationMenuItemProps,\n  NavigationMenuTriggerProps,\n  NavigationMenuLinkProps,\n  NavigationMenuIndicatorProps,\n  NavigationMenuContentProps,\n  NavigationMenuViewportProps,\n};\n", "import { Fragment as _Fragment, jsx as _jsx } from \"react/jsx-runtime\";\nimport { useHydrated } from \"./use-hydrated\";\n/**\n * Render the children only after the JS has loaded client-side. Use an optional\n * fallback component if the JS is not yet loaded.\n *\n * Example: Render a Chart component if JS loads, renders a simple FakeChart\n * component server-side or if there is no JS. The FakeChart can have only the\n * UI without the behavior or be a loading spinner or skeleton.\n * ```tsx\n * return (\n *   <ClientOnly fallback={<FakeChart />}>\n *     {() => <Chart />}\n *   </ClientOnly>\n * );\n * ```\n */\nexport function ClientOnly({ children, fallback = null }) {\n    return useHydrated() ? _jsx(_Fragment, { children: children() }) : _jsx(_Fragment, { children: fallback });\n}\n", "import { useEffect, useState } from \"react\";\nlet hydrating = true;\n/**\n * Return a boolean indicating if the JS has been hydrated already.\n * When doing Server-Side Rendering, the result will always be false.\n * When doing Client-Side Rendering, the result will always be false on the\n * first render and true from then on. Even if a new component renders it will\n * always start with true.\n *\n * Example: Disable a button that needs JS to work.\n * ```tsx\n * let hydrated = useHydrated();\n * return (\n *   <button type=\"button\" disabled={!hydrated} onClick={doSomethingCustom}>\n *     Click me\n *   </button>\n * );\n * ```\n */\nexport function useHydrated() {\n    let [hydrated, setHydrated] = useState(() => !hydrating);\n    useEffect(function hydrate() {\n        hydrating = false;\n        setHydrated(true);\n    }, []);\n    return hydrated;\n}\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\user-menu.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\user-menu.tsx\");\n  import.meta.hot.lastModified = \"1710131653000\";\n}\n// REMIX HMR END\n\n// \"use client\";\n\nimport { useFetcher, Link } from \"@remix-run/react\";\nimport { ClientOnly } from 'remix-utils';\nimport { Button } from \"~/components/ui/button\";\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuSeparator, DropdownMenuTrigger } from \"~/components/ui/dropdown-menu\";\nimport { IconExternalLink } from \"~/components/ui/icons\";\nimport { useUser } from \"~/utils\";\n// export interface UserMenuProps {\n//   user: Session[\"user\"];\n// }\n\nfunction getUserInitials(name) {\n  const [firstName, lastName] = name.split(\" \");\n  return lastName ? `${firstName[0]}${lastName[0]}` : firstName.slice(0, 2);\n}\nexport function UserMenuClient() {\n  _s();\n  const user = useUser();\n  const fetcher = useFetcher();\n  return <div className=\"flex items-center justify-between\">\n      <DropdownMenu>\n        <DropdownMenuTrigger asChild>\n          <Button variant=\"ghost\" className=\"pl-0\">\n            <div className=\"flex items-center justify-center text-xs font-medium uppercase rounded-full select-none size-7 shrink-0 bg-muted/50 text-muted-foreground\">\n              {user?.email ? getUserInitials(user?.email) : null}\n            </div>\n            <span className=\"ml-2\">{user?.email}</span>\n          </Button>\n        </DropdownMenuTrigger>\n        <DropdownMenuContent sideOffset={8} align=\"start\" className=\"w-[180px]\">\n          <DropdownMenuItem className=\"flex-col items-start\">\n            <div className=\"text-xs font-medium\">{user?.email}</div>\n            <div className=\"text-xs text-zinc-500\">{user?.email}</div>\n          </DropdownMenuItem>\n          <DropdownMenuSeparator />\n          <DropdownMenuItem asChild>\n            <Link to=\"https://vercel.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"inline-flex items-center justify-between w-full text-xs\">\n              Vercel Homepage\n              <IconExternalLink className=\"size-3 ml-auto\" />\n            </Link>\n          </DropdownMenuItem>\n          <DropdownMenuItem onClick={() => fetcher.submit({\n          method: \"POST\"\n        }, {\n          action: \"logout\"\n        })} className=\"text-xs\">\n            Log Out\n          </DropdownMenuItem>\n        </DropdownMenuContent>\n      </DropdownMenu>\n    </div>;\n}\n_s(UserMenuClient, \"ycj8IOeoSfghj9PThcRX4KB99hA=\", false, function () {\n  return [useUser, useFetcher];\n});\n_c = UserMenuClient;\nexport function UserMenu() {\n  return <ClientOnly fallback={<div>Loading...</div>}>\n      {() => <UserMenuClient />}\n    </ClientOnly>;\n}\n_c2 = UserMenu;\nvar _c, _c2;\n$RefreshReg$(_c, \"UserMenuClient\");\n$RefreshReg$(_c2, \"UserMenu\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\ui\\\\\\\\sheet.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\ui\\\\sheet.tsx\");\n  import.meta.hot.lastModified = \"1710131653000\";\n}\n// REMIX HMR END\n\nimport * as React from \"react\";\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\";\nimport { cva } from \"class-variance-authority\";\nimport { X } from \"lucide-react\";\nimport { cn } from \"~/lib/utils\";\nconst Sheet = SheetPrimitive.Root;\nconst SheetTrigger = SheetPrimitive.Trigger;\nconst SheetClose = SheetPrimitive.Close;\nconst SheetPortal = SheetPrimitive.Portal;\nconst SheetOverlay = React.forwardRef(_c = ({\n  className,\n  ...props\n}, ref) => <SheetPrimitive.Overlay className={cn(\"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\", className)} {...props} ref={ref} />);\n_c2 = SheetOverlay;\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName;\nconst sheetVariants = cva(\"fixed z-50 gap-4 bg-white p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500 dark:bg-slate-950\", {\n  variants: {\n    side: {\n      top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n      bottom: \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n      left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n      right: \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\"\n    }\n  },\n  defaultVariants: {\n    side: \"right\"\n  }\n});\nconst SheetContent = React.forwardRef(_c3 = ({\n  side = \"right\",\n  className,\n  children,\n  ...props\n}, ref) => <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content ref={ref} className={cn(sheetVariants({\n    side\n  }), className)} {...props}>\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-white transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-slate-950 focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-slate-100 dark:ring-offset-slate-950 dark:focus:ring-slate-300 dark:data-[state=open]:bg-slate-800\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>);\n_c4 = SheetContent;\nSheetContent.displayName = SheetPrimitive.Content.displayName;\nconst SheetHeader = ({\n  className,\n  ...props\n}) => <div className={cn(\"flex flex-col space-y-2 text-center sm:text-left\", className)} {...props} />;\n_c5 = SheetHeader;\nSheetHeader.displayName = \"SheetHeader\";\nconst SheetFooter = ({\n  className,\n  ...props\n}) => <div className={cn(\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\", className)} {...props} />;\n_c6 = SheetFooter;\nSheetFooter.displayName = \"SheetFooter\";\nconst SheetTitle = React.forwardRef(_c7 = ({\n  className,\n  ...props\n}, ref) => <SheetPrimitive.Title ref={ref} className={cn(\"text-lg font-semibold text-slate-950 dark:text-slate-50\", className)} {...props} />);\n_c8 = SheetTitle;\nSheetTitle.displayName = SheetPrimitive.Title.displayName;\nconst SheetDescription = React.forwardRef(_c9 = ({\n  className,\n  ...props\n}, ref) => <SheetPrimitive.Description ref={ref} className={cn(\"text-sm text-slate-500 dark:text-slate-400\", className)} {...props} />);\n_c10 = SheetDescription;\nSheetDescription.displayName = SheetPrimitive.Description.displayName;\nexport { Sheet, SheetPortal, SheetOverlay, SheetTrigger, SheetClose, SheetContent, SheetHeader, SheetFooter, SheetTitle, SheetDescription };\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"SheetOverlay$React.forwardRef\");\n$RefreshReg$(_c2, \"SheetOverlay\");\n$RefreshReg$(_c3, \"SheetContent$React.forwardRef\");\n$RefreshReg$(_c4, \"SheetContent\");\n$RefreshReg$(_c5, \"SheetHeader\");\n$RefreshReg$(_c6, \"SheetFooter\");\n$RefreshReg$(_c7, \"SheetTitle$React.forwardRef\");\n$RefreshReg$(_c8, \"SheetTitle\");\n$RefreshReg$(_c9, \"SheetDescription$React.forwardRef\");\n$RefreshReg$(_c10, \"SheetDescription\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\sidebar-mobile.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\sidebar-mobile.tsx\");\n  import.meta.hot.lastModified = \"1710236947185.1138\";\n}\n// REMIX HMR END\n\nimport { Sidebar } from \"~/components/sidebar\";\nimport { Button } from \"~/components/ui/button\";\nimport { Sheet, SheetContent, SheetTrigger } from \"~/components/ui/sheet\";\nimport lowes from \"../../public/assets/lowes.png\";\nexport function SidebarMobile({\n  children\n}) {\n  return <Sheet>\n      <SheetTrigger asChild>\n        <Button variant=\"ghost\" className=\"-ml-2 flex p-0 lg:hidden\">\n          <img className=\"cursor-poniter  h-12 w-16 \" src={lowes} alt=\"logo\" />\n          <span className=\"sr-only\">Toggle Sidebar</span>\n        </Button>\n      </SheetTrigger>\n      <SheetContent className=\"inset-y-0 flex h-auto w-[300px] flex-col p-0\">\n        <Sidebar className=\"flex\">{children}</Sidebar>\n      </SheetContent>\n    </Sheet>;\n}\n_c = SidebarMobile;\nvar _c;\n$RefreshReg$(_c, \"SidebarMobile\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\sidebar-toggle.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\sidebar-toggle.tsx\");\n  import.meta.hot.lastModified = \"1710236758892.9028\";\n}\n// REMIX HMR END\n\n// \"use client\";\n\nimport { useSidebar } from \"~/lib/hooks/use-sidebar\";\nimport lowes from \"../../public/assets/lowes.png\";\n// eslint-disable-next-line import/no-unresolved\nexport function SidebarToggle() {\n  _s();\n  const {\n    toggleSidebar\n  } = useSidebar();\n  return <button className=\"-ml-2 hidden lg:flex\" onClick={() => {\n    toggleSidebar();\n  }}>\n      <img className=\"cursor-poniter  h-12 w-15 \" src={lowes} alt=\"logo\" />\n      {/* <IconSidebar className=\"size-6\" /> */}\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </button>;\n}\n_s(SidebarToggle, \"dRnjPhQbCChcVGr4xvQkpNxnqyg=\", false, function () {\n  return [useSidebar];\n});\n_c = SidebarToggle;\nvar _c;\n$RefreshReg$(_c, \"SidebarToggle\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\providers.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\providers.tsx\");\n  import.meta.hot.lastModified = \"1710131653000\";\n}\n// REMIX HMR END\n\nimport { ClientOnly } from \"remix-utils\";\nimport { TooltipProvider } from \"~/components/ui/tooltip\";\nimport { ThemeProvider as NextThemesProvider } from \"~/context/theme-context\";\n// import { ThemeProviderProps } from 'next-themes/dist/types'\nimport { SidebarProvider } from \"~/lib/hooks/use-sidebar\";\nexport function Providers({\n  children,\n  ...props\n}) {\n  return <ClientOnly>\n      {() => <NextThemesProvider {...props}>\n          <SidebarProvider>\n            <TooltipProvider>{children}</TooltipProvider>\n          </SidebarProvider>\n        </NextThemesProvider>}\n    </ClientOnly>;\n}\n_c = Providers;\nvar _c;\n$RefreshReg$(_c, \"Providers\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA,kBAA+B;;;ACE/B,IAAAA,gBAAkB;;;ACFlB,YAAuB;;;;;;;;AElBvB,SAASC,0CAAeC,OAAU;AAChC,QAAMC,UAAMC,aAAAA,QAAa;IAH3B;IAGoCC,UAAUH;GAAhC;AAKZ,aAAOE,aAAAA,SAAc,MAAM;AACzB,QAAID,IAAIG,QAAQJ,UAAUA,OAAO;AAC/BC,UAAIG,QAAQD,WAAWF,IAAIG,QAAQJ;AACnCC,UAAIG,QAAQJ,QAAQA;;AAEtB,WAAOC,IAAIG,QAAQD;KAClB;IAACH;GANG;;;;AEqBT,IAAMK,6CAAuB;AAE7B,IAAM,CAACC,kCAAYC,qCAAeC,2CAA5B,IAAqDC,0CAGzDJ,0CAHyE;AAK3E,IAAM,CAACK,4CAAsBC,+CAAyBC,qDAAhD,IACJH,0CAA4CJ,0CAA5B;AAGlB,IAAM,CAACQ,mDAA6BC,yCAA9B,IAA2DC,yCAC/DV,4CACA;EAACG;EAAuBI;CAFyD;AA+BnF,IAAM,CAACI,kDAA4BC,8CAA7B,IACJJ,kDAAwDR,0CAA7B;AAE7B,IAAM,CAACa,+CAAyBC,+CAA1B,IAAuDN,kDAE1DR,0CAFqF;AA0BxF,IAAMe,4CAAiBC,kCAAAA,YACrB,CAACC,OAAyCC,iBAAiB;AACzD,QAAM,EAAA,uBAEJC,OAAOC,WAFH,eAAA,cAAA,gBAKY,KALZ,oBAMgB,KANhB,cAOU,cAPV,KASJ,GAAGC,oBAAH,IACEJ;AACJ,QAAM,CAACK,gBAAgBC,iBAAjB,QAAsCP,cAAAA,UAA6C,IAA7C;AAC5C,QAAMQ,cAAcC;IAAgBP;IAAeQ,CAAAA,SAASH,kBAAkBG,IAAD;EAA1C;AACnC,QAAMC,YAAYC,0CAAaC,GAAD;AAC9B,QAAMC,mBAAed,cAAAA,QAAa,CAAb;AACrB,QAAMe,oBAAgBf,cAAAA,QAAa,CAAb;AACtB,QAAMgB,wBAAoBhB,cAAAA,QAAa,CAAb;AAC1B,QAAM,CAACiB,eAAeC,gBAAhB,QAAoClB,cAAAA,UAAe,IAAf;AAC1C,QAAM,CAACG,SAAQ,IAAIgB,QAAb,IAAyBC,yCAAqB;IAClDC,MAAMjB;IACNkB,UAAWnB,CAAAA,UAAU;AACnB,YAAMoB,SAASpB,UAAU;AACzB,YAAMqB,uBAAuBC,oBAAoB;AAEjD,UAAIF,QAAQ;AACVG,eAAOC,aAAaX,kBAAkBY,OAAtC;AACA,YAAIJ;AAAsBN,2BAAiB,KAAD;aACrC;AACLQ,eAAOC,aAAaX,kBAAkBY,OAAtC;AACAZ,0BAAkBY,UAAUF,OAAOG;UACjC,MAAMX,iBAAiB,IAAD;UACtBO;QAF0B;;AAM9BK,wBAAa,QAAbA,kBAAa,UAAbA,cAAgB3B,KAAH;;IAEf4B,aAAaC;GAnBoC;AAsBnD,QAAMC,sBAAkBjC,cAAAA,aAAkB,MAAM;AAC9C0B,WAAOC,aAAaZ,cAAca,OAAlC;AACAb,kBAAca,UAAUF,OAAOG;MAAW,MAAMV,SAAS,EAAD;MAAM;IAAtC;KACvB;IAACA;GAHoB;AAKxB,QAAMe,iBAAalC,cAAAA,aAChBmC,CAAAA,cAAsB;AACrBT,WAAOC,aAAaZ,cAAca,OAAlC;AACAT,aAASgB,SAAD;KAEV;IAAChB;GALgB;AAQnB,QAAMiB,wBAAoBpC,cAAAA,aACvBmC,CAAAA,cAAsB;AACrB,UAAME,aAAalC,WAAUgC;AAC7B,QAAIE;AAGFX,aAAOC,aAAaZ,cAAca,OAAlC;;AAEAd,mBAAac,UAAUF,OAAOG,WAAW,MAAM;AAC7CH,eAAOC,aAAaZ,cAAca,OAAlC;AACAT,iBAASgB,SAAD;SACPG,aAHoB;KAM3B;IAACnC;IAAOgB;IAAUmB;GAdM;AAiB1BtC,oBAAAA,WAAgB,MAAM;AACpB,WAAO,MAAM;AACX0B,aAAOC,aAAab,aAAac,OAAjC;AACAF,aAAOC,aAAaZ,cAAca,OAAlC;AACAF,aAAOC,aAAaX,kBAAkBY,OAAtC;;KAED,CAAA,CANH;AAQA,SACE,kCAAAW,eAAC,8CADH;IAEI,OAAOC;IACP,YAAY;IACZ,OAAOrC;IACP,KAAKQ;IACL;IACA,oBAAoBL;IACpB,gBAAiB6B,CAAAA,cAAc;AAC7BT,aAAOC,aAAab,aAAac,OAAjC;AACA,UAAIX;AAAemB,0BAAkBD,SAAD;;AAC/BD,mBAAWC,SAAD;;IAEjB,gBAAgB,MAAM;AACpBT,aAAOC,aAAab,aAAac,OAAjC;AACAK,sBAAe;;IAEjB,gBAAgB,MAAMP,OAAOC,aAAaZ,cAAca,OAAlC;IACtB,gBAAgBK;IAChB,cAAeE,CAAAA,cAAc;AAC3BhB;QAAUsB,CAAAA,cAAeA,cAAcN,YAAY,KAAKA;MAAhD;;IAEV,eAAe,MAAMhB,SAAS,EAAD;KAE7B,kCAAAoB,eAAC,0CAAU,KAvBb,SAAA;IAwBI,cAAW;IACX,oBAAkBG;IAClB,KAAK/B;KACDN,qBAJN;IAKE,KAAKG;GALP,CAAA,CAvBF;CAjFiB;AAgMvB,IAAMmC,+CACJC,CAAAA,UACG;AACH,QAAM,EAAA,OAAA,YAAA,oBAAA,KAAA,aAAA,UAAA,OAAA,cAAA,eAAA,gBAAA,gBAAA,gBAAA,eAaJC,IACED;AACJ,QAAM,CAACE,UAAUC,WAAX,QAA0BC,cAAAA,UAAqD,IAArD;AAChC,QAAM,CAACC,iBAAiBC,kBAAlB,QAAwCF,cAAAA,UAAyC,oBAAIG,IAAJ,CAAzC;AAC9C,QAAM,CAACC,gBAAgBC,iBAAjB,QAAsCL,cAAAA,UAAsC,IAAtC;AAE5C,SACE,kCAAAM,eAAC,kDADH;IAEI;IACA;IACA;IACA;IACA,eAAeC,0CAAYC,KAAD;IAC1B,QAAQC,0CAAK;IACb;IACA;IACA;IACA,kBAAkBV;IAClB;IACA,wBAAwBM;IACxB,gBAAgBK,0CAAeC,cAAD;IAC9B,gBAAgBD,0CAAeE,cAAD;IAC9B,gBAAgBF,0CAAeG,cAAD;IAC9B,gBAAgBH,0CAAeb,cAAD;IAC9B,cAAca,0CAAeI,YAAD;IAC5B,eAAeJ,0CAAeK,aAAD;IAC7B,6BAAyBf,cAAAA,aAAkB,CAACgB,cAAcC,gBAAgB;AACxEf,yBAAoBgB,CAAAA,gBAAgB;AAClCA,oBAAYC,IAAIH,cAAcC,WAA9B;AACA,eAAO,IAAId,IAAIe,WAAR;OAFS;OAIjB,CAAA,CALsB;IAMzB,6BAAyBlB,cAAAA,aAAmBgB,CAAAA,iBAAiB;AAC3Dd,yBAAoBgB,CAAAA,gBAAgB;AAClC,YAAI,CAACA,YAAYE,IAAIJ,YAAhB;AAA+B,iBAAOE;AAC3CA,oBAAYG,OAAOL,YAAnB;AACA,eAAO,IAAIb,IAAIe,WAAR;OAHS;OAKjB,CAAA,CANsB;KAQzB,kCAAAZ,eAAC,iCAAW,UAjCd;IAiCuB;KACnB,kCAAAA,eAAC,+CADH;IAC2B;IAAc,OAAOL;KAC3CqB,QADH,CADF,CAjCF;;AA8CJ,IAAMC,kCAAY;AAMlB,IAAMC,4CAAqBxB,kCAAAA,YACzB,CAACJ,OAA6C6B,iBAAiB;AAC7D,QAAM,EAAA,uBAAyB,GAAGC,UAAH,IAAiB9B;AAChD,QAAM+B,UAAUC,+CAAyBL,iCAAWM,qBAAZ;AAExC,QAAMC,OACJ,kCAAAxB,eAAC,0CAAU,IADb,SAAA;IACgB,oBAAkBqB,QAAQI;KAAiBL,WAAzD;IAAoE,KAAKD;GAAzE,CAAA;AAGF,SACE,kCAAAnB,eAAC,0CAAU,KADb;IACiB,OAAO;MAAE0B,UAAU;;IAAc,KAAKL,QAAQM;KAC3D,kCAAA3B,eAAC,iCAAW,MADd;IACmB,OAAOuB;KACrBF,QAAQO,aAAa,kCAAA5B,eAAC,kCADzB;IACoC,SAAA;KAASwB,IAArB,IAA0CA,IADlE,CADF;CAVqB;AAyB3B,IAAMK,kCAAY;AAgBlB,IAAM,CAACC,yDAAmCC,kDAApC,IACJC,kDAA4DH,+BAAjC;AAQ7B,IAAMI,4CAAqBC,kCAAAA,YACzB,CAACC,OAA6CC,iBAAiB;AAC7D,QAAM,EAAA,uBAAyBC,OAAOC,WAAW,GAAGC,UAAH,IAAiBJ;AAClE,QAAMK,YAAYC,0CAAK;AAGvB,QAAMJ,QAAQC,aAAaE,aAAa;AACxC,QAAME,iBAAaR,cAAAA,QAA2C,IAA3C;AACnB,QAAMS,iBAAaT,cAAAA,QAA2C,IAA3C;AACnB,QAAMU,oBAAgBV,cAAAA,QAAgC,IAAhC;AACtB,QAAMW,gCAA4BX,cAAAA,QAAa,MAAM;EAAA,CAAnB;AAClC,QAAMY,wBAAoBZ,cAAAA,QAAa,KAAb;AAE1B,QAAMa,yBAAqBb,cAAAA,aAAkB,CAACc,OAAO,YAAY;AAC/D,QAAIN,WAAWO,SAAS;AACtBJ,gCAA0BI,QAA1B;AACA,YAAMC,aAAaC,4CAAsBT,WAAWO,OAAZ;AACxC,UAAIC,WAAWE;AAAQC,yCAAWL,SAAS,UAAUE,aAAaA,WAAWI,QAAX,CAAjC;;KAElC,CAAA,CANwB;AAQ3B,QAAMC,wBAAoBrB,cAAAA,aAAkB,MAAM;AAChD,QAAIQ,WAAWO,SAAS;AACtB,YAAMC,aAAaC,4CAAsBT,WAAWO,OAAZ;AACxC,UAAIC,WAAWE;AAAQP,kCAA0BI,UAAUO,yCAAmBN,UAAD;;KAE9E,CAAA,CALuB;AAO1B,SACE,kCAAAO,eAAC,yDADH;IAEI,OAAOC;IACP;IACA;IACA;IACA;IACA;IACA,gBAAgBX;IAChB,mBAAmBA;IACnB,oBAAoBQ;IACpB,uBAAuBA;KAEvB,kCAAAE,eAAC,0CAAU,IAAX,SAAA,CAAA,GAAkBlB,WAZpB;IAY+B,KAAKH;GAAlC,CAAA,CAZF;CA7BqB;AAqD3B,IAAMuB,qCAAe;AAMrB,IAAMC,2CAAwBC,kCAAAA,YAG5B,CAACC,OAAgDC,iBAAiB;AAClE,QAAM,EAAA,uBAAA,UAAmC,GAAGC,aAAH,IAAoBF;AAC7D,QAAMG,UAAUC,+CAAyBP,oCAAcG,MAAMK,qBAArB;AACxC,QAAMC,cAAcC,mDAA6BV,oCAAcG,MAAMK,qBAArB;AAChD,QAAMG,UAAMT,cAAAA,QAA2C,IAA3C;AACZ,QAAMU,eAAeC,0CAAgBF,KAAKF,YAAYK,YAAYV,YAA9B;AACpC,QAAMW,YAAYC,oCAAcV,QAAQW,QAAQR,YAAYS,KAA7B;AAC/B,QAAMC,YAAYC,oCAAcd,QAAQW,QAAQR,YAAYS,KAA7B;AAC/B,QAAMG,8BAA0BnB,cAAAA,QAAa,KAAb;AAChC,QAAMoB,uBAAmBpB,cAAAA,QAAa,KAAb;AACzB,QAAMqB,OAAOd,YAAYS,UAAUZ,QAAQY;AAE3C,SACE,kCAAAM,eAAA,cAAAC,UAAA,MACE,kCAAAD,eAAC,iCAAW,UAFhB;IAEyB,OAAOhB;IAAuB,OAAOC,YAAYS;KACpE,kCAAAM,eAAC,sCADH;IACkB,SAAA;KACd,kCAAAA,eAAC,0CAAU,QADb,SAAA;IAEI,IAAIT;IACJ;IACA,iBAAeW,WAAW,KAAKC;IAC/B,cAAYC,mCAAaL,IAAD;IACxB,iBAAeA;IACf,iBAAeJ;KACXd,cAPN;IAQE,KAAKO;IACL,gBAAgBiB,0CAAqB1B,MAAM2B,gBAAgB,MAAM;AAC/DR,uBAAiBS,UAAU;AAC3BtB,kBAAYuB,kBAAkBD,UAAU;KAFN;IAIpC,eAAeF,0CACb1B,MAAM8B,eACNC,gCAAU,MAAM;AACd,UACER,YACAJ,iBAAiBS,WACjBtB,YAAYuB,kBAAkBD,WAC9BV,wBAAwBU;AAExB;AACFzB,cAAQ6B,eAAe1B,YAAYS,KAAnC;AACAG,8BAAwBU,UAAU;KAT3B,CAFwB;IAcnC,gBAAgBF,0CACd1B,MAAMiC,gBACNF,gCAAU,MAAM;AACd,UAAIR;AAAU;AACdpB,cAAQ+B,eAAR;AACAhB,8BAAwBU,UAAU;KAH3B,CAFyB;IAQpC,SAASF,0CAAqB1B,MAAMmC,SAAS,MAAM;AACjDhC,cAAQiC,aAAa9B,YAAYS,KAAjC;AACAI,uBAAiBS,UAAUR;KAFA;IAI7B,WAAWM,0CAAqB1B,MAAMqC,WAAYC,CAAAA,UAAU;AAC1D,YAAMC,mBAAmBpC,QAAQqC,QAAQ,QAAQ,cAAc;AAC/D,YAAMC,WAAW;QAAEC,YAAY;QAAaC,UAAUJ;QACpDpC,QAAQyC,WADO;AAGjB,UAAIxB,QAAQkB,MAAMO,QAAQJ,UAAU;AAClCnC,oBAAYwC,eAAZ;AAEAR,cAAMS,eAAN;;KAR2B;GAvCjC,CAAA,CADF,CADF,GAyDC3B,QACC,kCAAAC,eAAA,cAAAC,UAAA,MACE,kCAAAD,eAAC,2CAzDD;IA0DE,eAAA;IACA,UAAU;IACV,KAAKf,YAAY0C;IACjB,SAAUV,CAAAA,UAAU;AAClB,YAAMW,UAAU3C,YAAY4C,WAAWtB;AACvC,YAAMuB,qBAAqBb,MAAMc;AACjC,YAAMC,oBAAoBF,uBAAuB3C,IAAIoB;AACrD,YAAM0B,sBAAsBL,YAAH,QAAGA,YAAH,SAAA,SAAGA,QAASM,SAASJ,kBAAlB;AAE5B,UAAIE,qBAAqB,CAACC;AACxBhD,oBAAYkD,kBAAkBH,oBAAoB,UAAU,KAA5D;;GAXN,GAiBClD,QAAQsD,YAAY,kCAAApC,eAjBrB,QAAA;IAiB2B,aAAWL;GAAjB,CAlBvB,CA3DJ;CAhB0B;AA2G9B,IAAM0C,oCAAc;AASpB,IAAMC,4CAAqBC,kCAAAA,YACzB,CAACC,OAA6CC,iBAAiB;AAC7D,QAAM,EAAA,uBAAA,QAAA,UAA2C,GAAGC,UAAH,IAAiBF;AAElE,SACE,kCAAAG,eAAC,sCADH;IACkB,SAAA;KACd,kCAAAA,eAAC,0CAAU,GADb,SAAA;IAEI,eAAaC,SAAS,KAAKC;IAC3B,gBAAcD,SAAS,SAASC;KAC5BH,WAHN;IAIE,KAAKD;IACL,SAASK,0CACPN,MAAMO,SACLC,CAAAA,WAAU;AACT,YAAMC,SAASD,OAAMC;AACrB,YAAMC,kBAAkB,IAAIC,YAAYd,mCAAa;QACnDe,SAAS;QACTC,YAAY;OAFU;AAIxBJ,aAAOK;QAAiBjB;QAAcW,CAAAA,UAAUO,aAAX,QAAWA,aAAX,SAAA,SAAWA,SAAWP,KAAH;QAAW;UAAEQ,MAAM;;MAA3E;AACAC,gDAA4BR,QAAQC,eAAT;AAE3B,UAAI,CAACA,gBAAgBQ,oBAAoB,CAACV,OAAMW,SAAS;AACvD,cAAMC,0BAA0B,IAAIT,YAAYU,4CAAsB;UACpET,SAAS;UACTC,YAAY;SAFkB;AAIhCI,kDAA4BR,QAAQW,uBAAT;;OAG/B;MAAEE,0BAA0B;KAnBD;GAL/B,CAAA,CADF;CALqB;AA4C3B,IAAMC,uCAAiB;AAWvB,IAAMC,4CAA0BC,kCAAAA,YAG9B,CAACC,OAAkDC,iBAAiB;AACpE,QAAM,EAAA,YAAc,GAAGC,eAAH,IAAsBF;AAC1C,QAAMG,UAAUC,+CAAyBP,sCAAgBG,MAAMK,qBAAvB;AACxC,QAAMC,YAAYC,QAAQJ,QAAQK,KAAT;AAEzB,SAAOL,QAAQM,iBACXC,iCAAAA,QAASC,aACP,kCAAAC,eAAC,2CAFP;IAEgB,SAASC,cAAcP;KAC/B,kCAAAM,eAAC,mDAAD,SAAA,CAAA,GAAiCV,gBADnC;IACmD,KAAKD;GAAtD,CAAA,CADF,GAGAE,QAAQM,cAJV,IAMA;CAf0B;AAuBhC,IAAMK,oDAA8BC,kCAAAA,YAGlC,CAACC,OAAsDC,iBAAiB;AACxE,QAAM,EAAA,uBAAyB,GAAGC,eAAH,IAAsBF;AACrD,QAAMG,UAAUC,+CAAyBC,sCAAgBC,qBAAjB;AACxC,QAAMC,WAAWC,oCAAcF,qBAAD;AAC9B,QAAM,CAACG,eAAeC,gBAAhB,QAAoCX,cAAAA,UACxC,IADwC;AAG1C,QAAM,CAACY,UAAUC,WAAX,QAA0Bb,cAAAA,UAAwD,IAAxD;AAChC,QAAMc,eAAeV,QAAQW,gBAAgB;AAC7C,QAAMC,YAAYC,QAAQb,QAAQc,KAAT;AAEzBlB,oBAAAA,WAAgB,MAAM;AAAA,QAAA;AACpB,UAAMmB,QAAQX,SAAQ;AACtB,UAAMY,eAAW,cAAGD,MAAME;MAAMC,CAAAA,SAASA,KAAKJ,UAAUd,QAAQc;IAA5C,OAAH,QAAA,gBAAA,SAAA,SAAG,YAAoDK,IAAIC;AAC5E,QAAIJ;AAAaT,uBAAiBS,WAAD;KAChC;IAACZ;IAAUJ,QAAQc;GAJtB;AASA,QAAMO,uBAAuB,MAAM;AACjC,QAAIf;AACFG,kBAAY;QACVa,MAAMZ,eAAeJ,cAAciB,cAAcjB,cAAckB;QAC/DC,QAAQf,eAAeJ,cAAcoB,aAAapB,cAAcqB;OAFvD;;AAMfC,0CAAkBtB,eAAee,oBAAhB;AACjBO,0CAAkB5B,QAAQ6B,gBAAgBR,oBAAzB;AAIjB,SAAOb,WACL,kCAAAsB,eAAC,0CAAU,KADb,SAAA;IAEI,eAAA;IACA,cAAYlB,YAAY,YAAY;IACpC,oBAAkBZ,QAAQW;KACtBZ,gBAJN;IAKE,KAAKD;IACL,OAAO;MACLU,UAAU;MACV,GAAIE,eACA;QACEqB,MAAM;QACNC,OAAOxB,SAASc,OAAO;QACvBW,WAAY,cAAazB,SAASiB;UAEpC;QACES,KAAK;QACLC,QAAQ3B,SAASc,OAAO;QACxBW,WAAY,cAAazB,SAASiB;;MAExC,GAAG1B,eAAeqC;;GAnBtB,CAAA,IAsBE;CA3D8B;AAkEpC,IAAMC,qCAAe;AAYrB,IAAMC,4CAAwB1C,kCAAAA,YAG5B,CAACC,OAAgDC,iBAAiB;AAClE,QAAM,EAAA,YAAc,GAAGyC,aAAH,IAAoB1C;AACxC,QAAMG,UAAUC,+CAAyBoC,oCAAcxC,MAAMM,qBAArB;AACxC,QAAMqC,cAAcC,mDAA6BJ,oCAAcxC,MAAMM,qBAArB;AAChD,QAAMuC,eAAeC,0CAAgBH,YAAYI,YAAY9C,YAAzB;AACpC,QAAM+C,OAAOL,YAAY1B,UAAUd,QAAQc;AAE3C,QAAMgC,cAAc;IAClBhC,OAAO0B,YAAY1B;IACnBiC,YAAYP,YAAYO;IACxBC,eAAeR,YAAYQ;IAC3BC,mBAAmBT,YAAYS;IAC/BC,uBAAuBV,YAAYU;IACnCC,oBAAoBX,YAAYW;IAChC,GAAGZ;;AAGL,SAAO,CAACvC,QAAQoD,WACd,kCAAAtB,eAAC,2CADH;IACY,SAASuB,cAAcR;KAC/B,kCAAAf,eAAC,iDADH,SAAA;IAEI,cAAYwB,mCAAaT,IAAD;KACpBC,aAFN;IAGE,KAAKJ;IACL,gBAAgBa,0CAAqB1D,MAAM2D,gBAAgBxD,QAAQyD,cAA/B;IACpC,gBAAgBF,0CACd1D,MAAM6D,gBACNC,gCAAU3D,QAAQ4D,cAAT,CAFyB;IAIpC,OAAO;;MAELC,eAAe,CAAChB,QAAQ7C,QAAQ8D,aAAa,SAASC;MACtD,GAAGjB,YAAYV;;GAZnB,CAAA,CADF,IAkBA,kCAAAN,eAAC,8CAjBC,SAAA;IAiBsB;KAA4BgB,aAApD;IAAiE,KAAKJ;GAAtE,CAAA;CAvC0B;AAwD9B,IAAMsB,+CAAyBC,kCAAAA,YAG7B,CAACC,OAAiDC,iBAAiB;AACnE,QAAMC,UAAUC,+CAAyBC,oCAAcJ,MAAMK,qBAArB;AACxC,QAAM,EAAA,yBAAA,wBAA2BC,IAA4BJ;AAE7DK,4CAAgB,MAAM;AACpBC,4BAAwBR,MAAMS,OAAO;MACnCC,KAAKT;MACL,GAAGD;KAFkB;KAItB;IAACA;IAAOC;IAAcO;GALV;AAOfD,4CAAgB,MAAM;AACpB,WAAO,MAAMD,wBAAwBN,MAAMS,KAAP;KACnC;IAACT,MAAMS;IAAOH;GAFF;AAKf,SAAO;CAnBsB;AAwB/B,IAAMK,6CAAuB;AAkB7B,IAAMC,kDAA4Bb,kCAAAA,YAGhC,CAACC,OAAoDC,iBAAiB;AACtE,QAAM,EAAA,uBAAA,OAAA,YAAA,eAAA,mBAAA,oBAAA,uBAQJ,GAAGY,aAAH,IACEb;AACJ,QAAME,UAAUC,+CAAyBC,oCAAcC,qBAAf;AACxC,QAAMK,UAAMX,cAAAA,QAA+C,IAA/C;AACZ,QAAMe,eAAeC,0CAAgBL,KAAKT,YAAN;AACpC,QAAMe,YAAYC,oCAAcf,QAAQgB,QAAQT,KAAjB;AAC/B,QAAMU,YAAYC,oCAAclB,QAAQgB,QAAQT,KAAjB;AAC/B,QAAMY,WAAWC,oCAAcjB,qBAAD;AAC9B,QAAMkB,6BAAyBxB,cAAAA,QAAqC,IAArC;AAE/B,QAAM,EAAA,cAAEyB,IAAkBtB;AAE1BH,oBAAAA,WAAgB,MAAM;AACpB,UAAM0B,UAAUf,IAAIgB;AAGpB,QAAIxB,QAAQyB,cAAcF,SAAS;AACjC,YAAMG,cAAc,MAAM;AAAA,YAAA;AACxBJ,sBAAa;AACbK,2BAAkB;AAClB,YAAIJ,QAAQK,SAASC,SAASC,aAA1B;AAA0C,WAAA,sBAAAC,WAAWP,aAAX,QAAA,wBAAA,UAAA,oBAAoBQ,MAApB;;AAEhDT,cAAQU,iBAAiBxB,4CAAsBiB,WAA/C;AACA,aAAO,MAAMH,QAAQW,oBAAoBzB,4CAAsBiB,WAAlD;;KAEd;IAAC1B,QAAQyB;IAAY3B,MAAMS;IAAOwB;IAAYT;IAAeK;GAbhE;AAeA,QAAMQ,sBAAkBtC,cAAAA,SAAc,MAAM;AAC1C,UAAMuC,QAAQjB,SAAQ;AACtB,UAAMkB,SAASD,MAAME;MAAKC,CAAAA,SAASA,KAAKhC;IAAzB;AACf,QAAIP,QAAQwC,QAAQ;AAAOH,aAAOI,QAAP;AAC3B,UAAMC,QAAQL,OAAOM,QAAQ3C,QAAQO,KAAvB;AACd,UAAMqC,YAAYP,OAAOM,QAAQ3C,QAAQ6C,aAAvB;AAClB,UAAMC,aAAavC,UAAUP,QAAQO;AACrC,UAAMwC,cAAcH,cAAcP,OAAOM,QAAQpC,KAAf;AAIlC,QAAI,CAACuC,cAAc,CAACC;AAAa,aAAO1B,uBAAuBG;AAE/D,UAAMwB,aAAa,MAAM;AAEvB,UAAIN,UAAUE,WAAW;AAEvB,YAAIE,cAAcF,cAAc;AAAI,iBAAOF,QAAQE,YAAY,aAAa;AAE5E,YAAIG,eAAeL,UAAU;AAAI,iBAAOA,QAAQE,YAAY,aAAa;;AAI3E,aAAO;OAVS;AAalBvB,2BAAuBG,UAAUwB;AACjC,WAAOA;KACN;IAAChD,QAAQ6C;IAAe7C,QAAQO;IAAOP,QAAQwC;IAAKrB;IAAUZ;GA5BzC;AA8BxB,SACE,kCAAA0C,eAAC,kCADH;IACc,SAAA;KACV,kCAAAA,eAAC,2CADH,SAAA;IAEI,IAAIhC;IACJ,mBAAiBH;IACjB,eAAaqB;IACb,oBAAkBnC,QAAQkD;KACtBvC,cALN;IAME,KAAKC;IACL,WAAW,MAAM;AAAA,UAAA;AACf,YAAMuC,0BAA0B,IAAIC,MAAM3C,4CAAsB;QAC9D4C,SAAS;QACTC,YAAY;OAFkB;AAIhC,OAAA,eAAA9C,IAAIgB,aAAJ,QAAA,iBAAA,UAAA,aAAa+B,cAAcJ,uBAA3B;;IAEF,gBAAgBK,0CAAqB1D,MAAM2D,gBAAiBC,CAAAA,UAAU;AAAA,UAAA;AACpEC,4BAAqB;AACrB,YAAMC,SAASF,MAAME;AAErB,WAAA,wBAAI5D,QAAQ6D,wBAAZ,QAAA,0BAAA,UAAI,sBAA4BjC,SAASgC,MAArC;AAA8CF,cAAMI,eAAN;KAJhB;IAMpC,sBAAsBN,0CAAqB1D,MAAMiE,sBAAuBL,CAAAA,UAAU;AAAA,UAAA;AAChF,YAAME,SAASF,MAAME;AACrB,YAAMI,YAAY7C,SAAQ,EAAG8C,KAAM1B,CAAAA,SAAnC;AAAkC,YAAA;AAAA,gBAAA,oBAAUA,KAAK/B,IAAIgB,aAAnB,QAAA,sBAAA,SAAA,SAAU,kBAAkBI,SAASgC,MAA3B;OAA1B;AAClB,YAAMM,iBAAiBlE,QAAQyB,gBAAR,oBAAsBzB,QAAQmE,cAA9B,QAAA,sBAAA,SAAA,SAAsB,kBAAkBvC,SAASgC,MAA3B;AAC7C,UAAII,aAAaE,kBAAkB,CAAClE,QAAQyB;AAAYiC,cAAMI,eAAN;KAJhB;IAM1C,WAAWN,0CAAqB1D,MAAMsE,WAAYV,CAAAA,UAAU;AAC1D,YAAMW,YAAYX,MAAMY,UAAUZ,MAAMa,WAAWb,MAAMc;AACzD,YAAMC,WAAWf,MAAMgB,QAAQ,SAAS,CAACL;AACzC,UAAII,UAAU;AACZ,cAAME,aAAaC,4CAAsBlB,MAAMmB,aAAP;AACxC,cAAMC,iBAAiBjD,SAASC;AAChC,cAAMY,QAAQiC,WAAWI;UAAWC,CAAAA,cAAcA,cAAcF;QAAlD;AACd,cAAMG,oBAAoBvB,MAAMwB;AAChC,cAAMC,iBAAiBF,oBACnBN,WAAWS,MAAM,GAAG1C,KAApB,EAA2BD,QAA3B,IACAkC,WAAWS,MAAM1C,QAAQ,GAAGiC,WAAWU,MAAvC;AAEJ,YAAIC,iCAAWH,cAAD;AAEZzB,gBAAMI,eAAN;aACK;AAAA,cAAA;AAIL,WAAA,wBAAAyB,cAAc/D,aAAd,QAAA,0BAAA,UAAA,sBAAuBQ,MAAvB;;;KAnByB;IAuB/B,iBAAiBwB,0CAAqB1D,MAAM0F,iBAAkB9B,CAAAA,UAAU;AAGtE+B,wBAAkBjE,UAAU;KAHO;GAjDvC,CAAA,CADF;CAtE8B;AAsIlC,IAAMkE,sCAAgB;AAYtB,IAAMC,4CAAyB9F,kCAAAA,YAG7B,CAACC,OAAiDC,iBAAiB;AACnE,QAAM,EAAA,YAAc,GAAG6F,cAAH,IAAqB9F;AACzC,QAAME,UAAUC,+CAAyByF,qCAAe5F,MAAMK,qBAAtB;AACxC,QAAM0F,OAAOC,QAAQ9F,QAAQO,KAAT;AAEpB,SACE,kCAAA0C,eAAC,2CADH;IACY,SAAS8C,cAAcF;KAC/B,kCAAA5C,eAAC,kDAAD,SAAA,CAAA,GAAgC2C,eADlC;IACiD,KAAK7F;GAApD,CAAA,CADF;CAT2B;AAsB/B,IAAMiG,mDAA6BC,kCAAAA,YAGjC,CAACC,QAAqDC,iBAAiB;AACvE,QAAM,EAAA,uBAAA,UAAmC,GAAGC,kBAAH,IAAyBF;AAClE,QAAMG,UAAUC,+CAAyBC,qCAAeC,qBAAhB;AACxC,QAAMC,eAAeC,0CAAgBP,cAAcE,QAAQM,gBAAvB;AACpC,QAAMC,yBAAyBC,gDAC7BC,oCACAZ,OAAMM,qBAFgD;AAIxD,QAAM,CAACO,MAAMC,OAAP,QAAkBf,cAAAA,UAAyD,IAAzD;AACxB,QAAM,CAACgB,SAASC,UAAV,QAAwBjB,cAAAA,UAAoD,IAApD;AAC9B,QAAMkB,gBAAgBJ,QAAOA,SAAI,QAAJA,SAAI,SAAJ,SAAAA,KAAMK,SAAQ,OAAOC;AAClD,QAAMC,iBAAiBP,QAAOA,SAAI,QAAJA,SAAI,SAAJ,SAAAA,KAAMQ,UAAS,OAAOF;AACpD,QAAMG,OAAOC,QAAQpB,QAAQqB,KAAT;AAGpB,QAAMC,qBAAqBH,OAAOnB,QAAQqB,QAAQrB,QAAQuB;AAQ1D,QAAMC,mBAAmB,MAAM;AAC7B,QAAIZ;AAASD,cAAQ;QAAEI,OAAOH,QAAQa;QAAaP,QAAQN,QAAQc;OAA/C;;AAEtBC,0CAAkBf,SAASY,gBAAV;AAEjB,SACE,kCAAAI,eAAC,0CAAU,KADb,SAAA;IAEI,cAAYC,mCAAaV,IAAD;IACxB,oBAAkBnB,QAAQ8B;KACtB/B,mBAHN;IAIE,KAAKK;IACL,OAAO;;MAEL2B,eAAe,CAACZ,QAAQnB,QAAQgC,aAAa,SAAShB;MACtD,CAAC,wCAAD,GAAmDF;MACnD,CAAC,yCAAD,GAAoDG;MACpD,GAAGlB,kBAAkBkC;;IAEvB,gBAAgBC,0CAAqBrC,OAAMsC,gBAAgBnC,QAAQoC,cAA/B;IACpC,gBAAgBF,0CAAqBrC,OAAMwC,gBAAgBC,gCAAUtC,QAAQuC,cAAT,CAAhC;GAbtC,GAeGC,MAAMC,KAAKlC,uBAAuBmC,KAAlC,EAAyCC,IAAI,CAAC,CAACtB,OAAO,EAAA,KAAA,YAAmB,GAAGxB,MAAH,CAA3B,MAA2C;AACxF,UAAM+C,WAAWtB,uBAAuBD;AACxC,WACE,kCAAAO,eAAC,2CADH;MACY,KAAKP;MAAO,SAASwB,cAAcD;OAC3C,kCAAAhB,eAAC,iDAAD,SAAA,CAAA,GACM/B,OAFR;MAGI,KAAKiD,0CAAYC,KAAMC,CAAAA,SAAS;AAG9B,YAAIJ,YAAYI;AAAMnC,qBAAWmC,IAAD;OAHlB;KAFlB,CAAA,CADF;GAHH,CAfH;CAhC+B;AAoEnC,IAAMC,yCAAmB;AAKzB,IAAMC,mCAAatD,kCAAAA,YACjB,CAACC,OAAqCC,iBAAiB;AACrD,QAAM,EAAA,uBAAyB,GAAGqD,WAAH,IAAkBtD;AACjD,QAAMG,UAAUC,+CAAyBgD,wCAAkB9C,qBAAnB;AAExC,SACE,kCAAAyB,eAAC,2CAAqB,UADxB;IACiC,OAAOzB;KACpC,kCAAAyB,eAAC,2CAAqB,MADxB;IAC6B,OAAOzB;KAChC,kCAAAyB,eAAC,0CAAU,KADb,SAAA;IACiB,KAAK5B,QAAQoD;KAASD,YAArC;IAAiD,KAAKrD;GAAtD,CAAA,CADF,CADF;CANa;AAiBnB,IAAMuD,mCAAa;EAAC;EAAc;EAAa;EAAW;;AAC1D,IAAMC,8CAAwB;AAK9B,IAAMC,uCAAiB3D,kCAAAA,YACrB,CAACC,OAAyCC,iBAAiB;AACzD,QAAM,EAAA,uBAAyB,GAAGqD,WAAH,IAAkBtD;AACjD,QAAM2D,WAAWC,8CAAwBtD,qBAAD;AACxC,QAAMH,UAAUC,+CAAyBqD,6CAAuBnD,qBAAxB;AAExC,SACE,kCAAAyB,eAAC,2CAAqB,UADxB;IACiC,OAAOzB;KACpC,kCAAAyB,eAAC,0CAAU,QAAX,SAAA,CAAA,GACMuB,YAFR;IAGI,KAAKrD;IACL,WAAWoC,0CAAqBrC,MAAM6D,WAAYC,CAAAA,UAAU;AAC1D,YAAMC,uBAAuB;QAAC;QAAQ;WAAUP;QAAYQ,SAASF,MAAMG,GAA9C;AAC7B,UAAIF,sBAAsB;AACxB,YAAIG,iBAAiBP,SAAQ,EAAGb;UAAKqB,CAAAA,SAASA,KAAKjB,IAAIkB;QAAlC;AACrB,cAAMC,cAAclE,QAAQoD,QAAQ,QAAQ,eAAe;AAC3D,cAAMe,WAAW;UAACD;UAAa;UAAW;;AAC1C,YAAIC,SAASN,SAASF,MAAMG,GAAxB;AAA8BC,yBAAeK,QAAf;AAClC,YAAIf,iCAAWQ,SAASF,MAAMG,GAA1B,GAAgC;AAClC,gBAAMO,eAAeN,eAAeO,QAAQX,MAAMY,aAA7B;AACrBR,2BAAiBA,eAAeS,MAAMH,eAAe,CAApC;;AAMnBI;UAAW,MAAMC,iCAAWX,cAAD;QAAjB;AAGVJ,cAAMgB,eAAN;;KAlB2B;GAHjC,CAAA,CADF;CAPiB;AAgDvB,SAASC,4CAAsBC,WAAwB;AACrD,QAAMC,QAAuB,CAAA;AAC7B,QAAMC,SAASC,SAASC,iBAAiBJ,WAAWK,WAAWC,cAAc;IAC3EC,YAAapC,CAAAA,SAAc;AACzB,YAAMqC,gBAAgBrC,KAAKsC,YAAY,WAAWtC,KAAKuC,SAAS;AAChE,UAAIvC,KAAKwC,YAAYxC,KAAKyC,UAAUJ;AAAe,eAAOH,WAAWQ;AAIrE,aAAO1C,KAAK2C,YAAY,IAAIT,WAAWU,gBAAgBV,WAAWQ;;GAPvD;AAUf,SAAOX,OAAOc,SAAP;AAAmBf,UAAMgB,KAAKf,OAAOgB,WAAlB;AAG1B,SAAOjB;;AAGT,SAASJ,iCAAWsB,YAA2B;AAC7C,QAAMC,2BAA2BjB,SAASkB;AAC1C,SAAOF,WAAWG,KAAMC,CAAAA,cAAc;AAEpC,QAAIA,cAAcH;AAA0B,aAAO;AACnDG,cAAUC,MAAV;AACA,WAAOrB,SAASkB,kBAAkBD;GAJ7B;;AAQT,SAASK,yCAAmBN,YAA2B;AACrDA,aAAWO,QAASH,CAAAA,cAAc;AAChCA,cAAUI,QAAQC,WAAWL,UAAUM,aAAa,UAAvB,KAAsC;AACnEN,cAAUO,aAAa,YAAY,IAAnC;GAFF;AAIA,SAAO,MAAM;AACXX,eAAWO,QAASH,CAAAA,cAAc;AAChC,YAAMQ,eAAeR,UAAUI,QAAQC;AACvCL,gBAAUO,aAAa,YAAYC,YAAnC;KAFF;;;AAOJ,SAASjF,wCAAkBkF,SAA6BC,UAAsB;AAC5E,QAAMC,eAAeC,0CAAeF,QAAD;AACnCG,4CAAgB,MAAM;AACpB,QAAIC,MAAM;AACV,QAAIL,SAAS;AAQX,YAAMM,iBAAiB,IAAIC,eAAe,MAAM;AAC9CC,6BAAqBH,GAAD;AACpBA,cAAMI,OAAOC,sBAAsBR,YAA7B;OAFe;AAIvBI,qBAAeK,QAAQX,OAAvB;AACA,aAAO,MAAM;AACXS,eAAOD,qBAAqBH,GAA5B;AACAC,uBAAeM,UAAUZ,OAAzB;;;KAGH;IAACA;IAASE;GApBE;;AAuBjB,SAASlF,mCAAaV,MAAe;AACnC,SAAOA,OAAO,SAAS;;AAGzB,SAASuG,oCAAcC,QAAgBtG,OAAe;AACpD,SAAQ,GAAEsG,kBAAkBtG;;AAG9B,SAASuG,oCAAcD,QAAgBtG,OAAe;AACpD,SAAQ,GAAEsG,kBAAkBtG;;AAG9B,SAASiB,gCAAauF,SAAqE;AACzF,SAAQlE,CAAAA,UAAWA,MAAMmE,gBAAgB,UAAUD,QAAQlE,KAAD,IAAU3C;;AAKtE,IAAM+G,4CAAOC;AAEb,IAAMC,4CAAOC;AACb,IAAMC,4CAAOC;AACb,IAAMC,4CAAUC;AAChB,IAAMC,4CAAOC;AACb,IAAMC,4CAAYC;AAClB,IAAMC,4CAAUC;AAChB,IAAMC,2CAAWC;;;AJnsCb;AA9BJ,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,qDAAuD,EAAE;AAAA,EAClG;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA0C;AAC1C,cAAY,IAAI,eAAe;AACjC;AAQA,IAAM,iBAAuB,iBAAW,KAAK,CAAC;AAAA,EAC5C;AAAA,EACA;AAAA,EACA,GAAG;AACL,GAAG,QAAQ,mDAAyB,2CAAxB,EAA6B,KAAU,WAAW,GAAG,mEAAmE,SAAS,GAAI,GAAG,OAC/I;AAAA;AAAA,EACD,mDAAC,4BAAD;AAAA;AAAA;AAAA;AAAA,SAAwB;AAAA,KAFjB;AAAA;AAAA;AAAA;AAAA,OAGT,CAA+B;AACjC,MAAM;AACN,eAAe,cAAsC,0CAAK;AAC1D,IAAM,qBAA2B,iBAAW,MAAM,CAAC;AAAA,EACjD;AAAA,EACA,GAAG;AACL,GAAG,QAAQ,mDAAyB,2CAAxB,EAA6B,KAAU,WAAW,GAAG,qEAAqE,SAAS,GAAI,GAAG,SAA3I;AAAA;AAAA;AAAA;AAAA,OAAkJ,CAAE;AAC/J,MAAM;AACN,mBAAmB,cAAsC,0CAAK;AAC9D,IAAM,qBAA6C;AACnD,IAAM,6BAA6B,IAAI,ghBAAghB;AACvjB,IAAM,wBAA8B,iBAAW,MAAM,CAAC;AAAA,EACpD;AAAA,EACA;AAAA,EACA,GAAG;AACL,GAAG,QAAQ,mDAAyB,2CAAxB,EAAgC,KAAU,WAAW,GAAG,2BAA2B,GAAG,SAAS,SAAS,GAAI,GAAG,OACtH;AAAA;AAAA,EAAU;AAAA,EACX,mDAAC,eAAY,WAAU,8FAA6F,eAAY,UAAhI;AAAA;AAAA;AAAA;AAAA,SAAuI;AAAA,KAFhI;AAAA;AAAA;AAAA;AAAA,OAGT,CAAkC;AACpC,MAAM;AACN,sBAAsB,cAAsC,0CAAQ;AACpE,IAAM,wBAA8B,iBAAW,MAAM,CAAC;AAAA,EACpD;AAAA,EACA,GAAG;AACL,GAAG,QAAQ,mDAAyB,2CAAxB,EAAgC,KAAU,WAAW,GAAG,kVAAkV,SAAS,GAAI,GAAG,SAA3Z;AAAA;AAAA;AAAA;AAAA,OAAka,CAAE;AAC/a,MAAM;AACN,sBAAsB,cAAsC,0CAAQ;AACpE,IAAM,qBAA6C;AACnD,IAAM,yBAA+B,iBAAW,MAAM,CAAC;AAAA,EACrD;AAAA,EACA,GAAG;AACL,GAAG,QAAQ,mDAAC,SAAI,WAAW,GAAG,4CAA4C,GACtE,6DAAyB,0CAAxB,EAAiC,WAAW,GAAG,wZAAwZ,SAAS,GAAG,KAAW,GAAG,SAAle;AAAA;AAAA;AAAA;AAAA,OAAye,KADle;AAAA;AAAA;AAAA;AAAA,OAET,CAAM;AACR,OAAO;AACP,uBAAuB,cAAsC,yCAAS;AACtE,IAAM,0BAAgC,iBAAW,OAAO,CAAC;AAAA,EACvD;AAAA,EACA,GAAG;AACL,GAAG,QAAQ,mDAAyB,2CAAxB,EAAkC,KAAU,WAAW,GAAG,gMAAgM,SAAS,GAAI,GAAG,OAClR,6DAAC,SAAI,WAAU,iGAAf;AAAA;AAAA;AAAA;AAAA,OAA6G,KADtG;AAAA;AAAA;AAAA;AAAA,OAET,CAAoC;AACtC,OAAO;AACP,wBAAwB,cAAsC,0CAAU;AAExE,IAAI;AAAJ,IAAQ;AAAR,IAAa;AAAb,IAAkB;AAAlB,IAAuB;AAAvB,IAA4B;AAA5B,IAAiC;AAAjC,IAAsC;AAAtC,IAA2C;AAA3C,IAAgD;AAAhD,IAAsD;AAAtD,IAA4D;AAC5D,aAAa,IAAI,iCAAiC;AAClD,aAAa,KAAK,gBAAgB;AAClC,aAAa,KAAK,qCAAqC;AACvD,aAAa,KAAK,oBAAoB;AACtC,aAAa,KAAK,wCAAwC;AAC1D,aAAa,KAAK,uBAAuB;AACzC,aAAa,KAAK,wCAAwC;AAC1D,aAAa,KAAK,uBAAuB;AACzC,aAAa,KAAK,yCAAyC;AAC3D,aAAa,MAAM,wBAAwB;AAC3C,aAAa,MAAM,0CAA0C;AAC7D,aAAa,MAAM,yBAAyB;AAE5C,OAAO,eAAe;AACtB,OAAO,eAAe;;;AK5FtB,yBAAmD;;;ACAnD,IAAAC,gBAAoC;AACpC,IAAI,YAAY;AAkBT,SAAS,cAAc;AAC1B,MAAI,CAAC,UAAU,WAAW,QAAI,wBAAS,MAAM,CAAC,SAAS;AACvD,+BAAU,SAAS,UAAU;AACzB,gBAAY;AACZ,gBAAY,IAAI;AAAA,EACpB,GAAG,CAAC,CAAC;AACL,SAAO;AACX;;;ADTO,SAAS,WAAW,EAAE,UAAU,WAAW,KAAK,GAAG;AACtD,SAAO,YAAY,QAAI,mBAAAC,KAAK,mBAAAC,UAAW,EAAE,UAAU,SAAS,EAAE,CAAC,QAAI,mBAAAD,KAAK,mBAAAC,UAAW,EAAE,UAAU,SAAS,CAAC;AAC7G;;;AE0BY,IAAAC,0BAAA;AA5CZ,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,yCAA2C,EAAE;AAAA,EACtF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAgC;AAChC,cAAY,IAAI,eAAe;AACjC;AAeA,SAAS,gBAAgB,MAAM;AAC7B,QAAM,CAAC,WAAW,QAAQ,IAAI,KAAK,MAAM,GAAG;AAC5C,SAAO,WAAW,GAAG,UAAU,CAAC,IAAI,SAAS,CAAC,MAAM,UAAU,MAAM,GAAG,CAAC;AAC1E;AACO,SAAS,iBAAiB;AAC/B,KAAG;AACH,QAAM,OAAO,QAAQ;AACrB,QAAM,UAAU,WAAW;AAC3B,SAAO,oDAAC,SAAI,WAAU,qCAClB,8DAAC,gBACC;AAAA,wDAAC,uBAAoB,SAAO,MAC1B,8DAAC,UAAO,SAAQ,SAAQ,WAAU,QAChC;AAAA,0DAAC,SAAI,WAAU,6IACZ,gBAAM,QAAQ,gBAAgB,MAAM,KAAK,IAAI,QADhD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,oDAAC,UAAK,WAAU,QAAQ,gBAAM,SAA9B;AAAA;AAAA;AAAA;AAAA,aAAoC;AAAA,SAJtC;AAAA;AAAA;AAAA;AAAA,WAKA,KANF;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,IACA,oDAAC,uBAAoB,YAAY,GAAG,OAAM,SAAQ,WAAU,aAC1D;AAAA,0DAAC,oBAAiB,WAAU,wBAC1B;AAAA,4DAAC,SAAI,WAAU,uBAAuB,gBAAM,SAA5C;AAAA;AAAA;AAAA;AAAA,eAAkD;AAAA,QAClD,oDAAC,SAAI,WAAU,yBAAyB,gBAAM,SAA9C;AAAA;AAAA;AAAA;AAAA,eAAoD;AAAA,WAFtD;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,oDAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,aAAuB;AAAA,MACvB,oDAAC,oBAAiB,SAAO,MACvB,8DAAC,QAAK,IAAG,sBAAqB,QAAO,UAAS,KAAI,uBAAsB,WAAU,2DAA0D;AAAA;AAAA,QAE1I,oDAAC,oBAAiB,WAAU,oBAA5B;AAAA;AAAA;AAAA;AAAA,eAA6C;AAAA,WAF/C;AAAA;AAAA;AAAA;AAAA,aAGA,KAJF;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,MACA,oDAAC,oBAAiB,SAAS,MAAM,QAAQ,OAAO;AAAA,QAChD,QAAQ;AAAA,MACV,GAAG;AAAA,QACD,QAAQ;AAAA,MACV,CAAC,GAAG,WAAU,WAAU,uBAJtB;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,SAlBF;AAAA;AAAA;AAAA;AAAA,WAmBA;AAAA,OA5BF;AAAA;AAAA;AAAA;AAAA,SA6BA,KA9BG;AAAA;AAAA;AAAA;AAAA,SA+BL;AACJ;AACA,GAAG,gBAAgB,gCAAgC,OAAO,WAAY;AACpE,SAAO,CAAC,SAAS,UAAU;AAC7B,CAAC;AACDC,OAAK;AACE,SAAS,WAAW;AACzB,SAAO,oDAAC,cAAW,UAAU,oDAAC,SAAI,0BAAL;AAAA;AAAA;AAAA;AAAA,SAAe,GACvC,gBAAM,oDAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,SAAgB,KADpB;AAAA;AAAA;AAAA;AAAA,SAEL;AACJ;AACAC,OAAM;AACN,IAAID;AAAJ,IAAQC;AACR,aAAaD,MAAI,gBAAgB;AACjC,aAAaC,MAAK,UAAU;AAE5B,OAAO,eAAe;AACtB,OAAO,eAAe;;;ACrEtB,IAAAC,SAAuB;AAYZ,IAAAC,0BAAA;AA/BX,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,2CAA6C,EAAE;AAAA,EACxF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAgC;AAChC,cAAY,IAAI,eAAe;AACjC;AAQA,IAAM,QAAuB;AAC7B,IAAM,eAA8B;AAEpC,IAAM,cAA6B;AACnC,IAAM,eAAqB,kBAAWC,OAAK,CAAC;AAAA,EAC1C;AAAA,EACA,GAAG;AACL,GAAG,QAAQ,oDAAgB,2CAAf,EAAuB,WAAW,GAAG,2JAA2J,SAAS,GAAI,GAAG,OAAO,OAAxN;AAAA;AAAA;AAAA;AAAA,OAAkO,CAAE;AAC/OC,OAAM;AACN,aAAa,cAA6B,0CAAQ;AAClD,IAAM,gBAAgB,IAAI,iNAAiN;AAAA,EACzO,UAAU;AAAA,IACR,MAAM;AAAA,MACJ,KAAK;AAAA,MACL,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,IACT;AAAA,EACF;AAAA,EACA,iBAAiB;AAAA,IACf,MAAM;AAAA,EACR;AACF,CAAC;AACD,IAAM,eAAqB,kBAAWC,OAAM,CAAC;AAAA,EAC3C,OAAO;AAAA,EACP;AAAA,EACA;AAAA,EACA,GAAG;AACL,GAAG,QAAQ,oDAAC,eACR;AAAA,sDAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,SAAc;AAAA,EACd,oDAAgB,2CAAf,EAAuB,KAAU,WAAW,GAAG,cAAc;AAAA,IAC9D;AAAA,EACF,CAAC,GAAG,SAAS,GAAI,GAAG,OACf;AAAA;AAAA,IACD,oDAAgB,2CAAf,EAAqB,WAAU,qUAC9B;AAAA,0DAAC,KAAE,WAAU,aAAb;AAAA;AAAA;AAAA;AAAA,aAAuB;AAAA,MACvB,oDAAC,UAAK,WAAU,WAAU,qBAA1B;AAAA;AAAA;AAAA;AAAA,aAA+B;AAAA,SAFjC;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,OAPF;AAAA;AAAA;AAAA;AAAA,SAQA;AAAA,KAVO;AAAA;AAAA;AAAA;AAAA,OAWT,CAAc;AAChBC,OAAM;AACN,aAAa,cAA6B,0CAAQ;AAClD,IAAM,cAAc,CAAC;AAAA,EACnB;AAAA,EACA,GAAG;AACL,MAAM,oDAAC,SAAI,WAAW,GAAG,oDAAoD,SAAS,GAAI,GAAG,SAAvF;AAAA;AAAA;AAAA;AAAA,OAA8F;AACpGC,OAAM;AACN,YAAY,cAAc;AAC1B,IAAM,cAAc,CAAC;AAAA,EACnB;AAAA,EACA,GAAG;AACL,MAAM,oDAAC,SAAI,WAAW,GAAG,iEAAiE,SAAS,GAAI,GAAG,SAApG;AAAA;AAAA;AAAA;AAAA,OAA2G;AACjHC,OAAM;AACN,YAAY,cAAc;AAC1B,IAAM,aAAmB,kBAAWC,OAAM,CAAC;AAAA,EACzC;AAAA,EACA,GAAG;AACL,GAAG,QAAQ,oDAAgB,2CAAf,EAAqB,KAAU,WAAW,GAAG,2DAA2D,SAAS,GAAI,GAAG,SAAzH;AAAA;AAAA;AAAA;AAAA,OAAgI,CAAE;AAC7IC,OAAM;AACN,WAAW,cAA6B,0CAAM;AAC9C,IAAM,mBAAyB,kBAAWC,OAAM,CAAC;AAAA,EAC/C;AAAA,EACA,GAAG;AACL,GAAG,QAAQ,oDAAgB,2CAAf,EAA2B,KAAU,WAAW,GAAG,8CAA8C,SAAS,GAAI,GAAG,SAAlH;AAAA;AAAA;AAAA;AAAA,OAAyH,CAAE;AACtIC,QAAO;AACP,iBAAiB,cAA6B,0CAAY;AAE1D,IAAIC;AAAJ,IAAQC;AAAR,IAAaC;AAAb,IAAkBC;AAAlB,IAAuBC;AAAvB,IAA4BC;AAA5B,IAAiCC;AAAjC,IAAsCC;AAAtC,IAA2CC;AAA3C,IAAgDC;AAChD,aAAaT,MAAI,+BAA+B;AAChD,aAAaC,MAAK,cAAc;AAChC,aAAaC,MAAK,+BAA+B;AACjD,aAAaC,MAAK,cAAc;AAChC,aAAaC,MAAK,aAAa;AAC/B,aAAaC,MAAK,aAAa;AAC/B,aAAaC,MAAK,6BAA6B;AAC/C,aAAaC,MAAK,YAAY;AAC9B,aAAaC,MAAK,mCAAmC;AACrD,aAAaC,OAAM,kBAAkB;AAErC,OAAO,eAAe;AACtB,OAAO,eAAe;;;;;;AC3EZ,IAAAC,0BAAA;AA7BV,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,8CAAgD,EAAE;AAAA,EAC3F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAqC;AACrC,cAAY,IAAI,eAAe;AACjC;AAOO,SAAS,cAAc;AAAA,EAC5B;AACF,GAAG;AACD,SAAO,oDAAC,SACJ;AAAA,wDAAC,gBAAa,SAAO,MACnB,8DAAC,UAAO,SAAQ,SAAQ,WAAU,4BAChC;AAAA,0DAAC,SAAI,WAAU,8BAA6B,KAAK,eAAO,KAAI,UAA5D;AAAA;AAAA;AAAA;AAAA,aAAmE;AAAA,MACnE,oDAAC,UAAK,WAAU,WAAU,8BAA1B;AAAA;AAAA;AAAA;AAAA,aAAwC;AAAA,SAF1C;AAAA;AAAA;AAAA;AAAA,WAGA,KAJF;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IACA,oDAAC,gBAAa,WAAU,gDACtB,8DAAC,WAAQ,WAAU,QAAQ,YAA3B;AAAA;AAAA;AAAA;AAAA,WAAoC,KADtC;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OATG;AAAA;AAAA;AAAA;AAAA,SAUL;AACJ;AACAC,OAAK;AACL,IAAIA;AACJ,aAAaA,MAAI,eAAe;AAEhC,OAAO,eAAe;AACtB,OAAO,eAAe;;;ACVhB,IAAAC,0BAAA;AAjCN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,8CAAgD,EAAE;AAAA,EAC3F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAIC,MAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAqC;AACrC,cAAY,IAAI,eAAe;AACjC;AAQO,SAAS,gBAAgB;AAC9B,EAAAA,IAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,WAAW;AACf,SAAO,oDAAC,YAAO,WAAU,wBAAuB,SAAS,MAAM;AAC7D,kBAAc;AAAA,EAChB,GACI;AAAA,wDAAC,SAAI,WAAU,8BAA6B,KAAK,eAAO,KAAI,UAA5D;AAAA;AAAA;AAAA;AAAA,WAAmE;AAAA,IAEnE,oDAAC,UAAK,WAAU,WAAU,8BAA1B;AAAA;AAAA;AAAA;AAAA,WAAwC;AAAA,OALrC;AAAA;AAAA;AAAA;AAAA,SAML;AACJ;AACAA,IAAG,eAAe,gCAAgC,OAAO,WAAY;AACnE,SAAO,CAAC,UAAU;AACpB,CAAC;AACDC,OAAK;AACL,IAAIA;AACJ,aAAaA,MAAI,eAAe;AAEhC,OAAO,eAAe;AACtB,OAAO,eAAe;;;AXmBZ,IAAAC,0BAAA;AAjEV,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,sCAAwC,EAAE;AAAA,EACnF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAIC,MAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA6B;AAC7B,cAAY,IAAI,eAAe;AACjC;AAcA,IAAM,aAAa,CAAC;AAAA,EAClB,OAAO;AAAA,EACP,MAAM;AAAA,EACN,aAAa;AACf,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,aAAa;AACf,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,aAAa;AACf,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,aAAa;AACf,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,aAAa;AACf,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,aAAa;AACf,CAAC;AACD,IAAM,WAAW,cAAAC,QAAM,WAAWC,OAAK,CAAC;AAAA,EACtC;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL,GAAG,QAAQ;AACT,SAAO,oDAAC,QACJ,8DAAC,sBAAmB,SAAO,MACzB,8DAAC,OAAE,KAAU,WAAW,GAAG,kLAAkL,SAAS,GAAI,GAAG,OAC3N;AAAA,wDAAC,SAAI,WAAU,oCAAoC,mBAAnD;AAAA;AAAA;AAAA;AAAA,WAAyD;AAAA,IACzD,oDAAC,OAAE,WAAU,2DACV,YADH;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAJF;AAAA;AAAA;AAAA;AAAA,SAKA,KANF;AAAA;AAAA;AAAA;AAAA,SAOA,KARG;AAAA;AAAA;AAAA;AAAA,SASL;AACJ,CAAC;AACDC,OAAM;AACN,SAAS,cAAc;AACvB,SAAS,cAAc;AACrB,EAAAH,IAAG;AACH,QAAM,OAAO,QAAQ;AAErB,SAAO,wFACF;AAAA,WAAO,wFACJ;AAAA,0DAAC,iBACC,8DAAC,eAAY,QAAQ,KAAK,MAA1B;AAAA;AAAA;AAAA;AAAA,aAA8B,KADhC;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,oDAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,aAAe;AAAA,SAJX;AAAA;AAAA;AAAA;AAAA,WAKN,IAAM,oDAAC,QAAK,IAAG,KAAI,QAAO,UAAS,KAAI,YACrC;AAAA,0DAAC,gBAAa,WAAU,2BAA0B,UAAQ,QAA1D;AAAA;AAAA;AAAA;AAAA,aAA2D;AAAA,MAC3D,oDAAC,gBAAa,WAAU,mCAAxB;AAAA;AAAA;AAAA;AAAA,aAAwD;AAAA,SAFpD;AAAA;AAAA;AAAA;AAAA,WAGN;AAAA,IACF,oDAAC,SAAI,WAAU,sBACb;AAAA,0DAAC,iBAAc,WAAU,qCAAzB;AAAA;AAAA;AAAA;AAAA,aAA2D;AAAA,MAC1D,OAAO,oDAAC,cAAD;AAAA;AAAA;AAAA;AAAA,aAAU,IAAK,oDAAC,UAAO,SAAQ,QAAO,SAAO,MAAC,WAAU,SAC5D,8DAAC,QAAK,IAAG,0BAAyB,qBAAlC;AAAA;AAAA;AAAA;AAAA,aAAuC,KADpB;AAAA;AAAA;AAAA;AAAA,aAErB;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,OAfG;AAAA;AAAA;AAAA;AAAA,SAgBL;AACJ;AACAA,IAAG,aAAa,gCAAgC,OAAO,WAAY;AACjE,SAAO,CAAC,OAAO;AACjB,CAAC;AACDI,OAAM;AACC,SAAS,SAAS;AACvB,SAAO,oDAAC,YAAO,WAAU,uGACrB;AAAA,wDAAC,SAAI,WAAU,yCACb,8DAAC,cAAAH,QAAM,UAAN,EAAe,UAAU,oDAAC,SAAI,WAAU,0BAAf;AAAA;AAAA;AAAA;AAAA,WAAsC,GAC9D,8DAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,WAAa,KADf;AAAA;AAAA;AAAA;AAAA,WAEA,KAHF;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,IAEA,oDAAC,SAAI,WAAU,2CACb;AAAA,0DAAC,SACC,8DAAC,kBACC,8DAAC,sBACC,8DAAC,sBACC;AAAA,4DAAC,yBAAsB,WAAU,yBAAwB,uBAAzD;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,oDAAC,yBACC,8DAAC,QAAG,WAAU,qEACX,qBAAW,IAAI,eAAa,oDAAC,YAA+B,OAAO,UAAU,OAAO,MAAM,UAAU,MAChG,oBAAU,eAD6B,UAAU,OAAzB;AAAA;AAAA;AAAA;AAAA,eAE3B,CAAW,KAHf;AAAA;AAAA;AAAA;AAAA,eAIA,KALF;AAAA;AAAA;AAAA;AAAA,eAMA;AAAA,WAVF;AAAA;AAAA;AAAA;AAAA,aAWA,KAZF;AAAA;AAAA;AAAA;AAAA,aAaA,KAdF;AAAA;AAAA;AAAA;AAAA,aAeA,KAhBF;AAAA;AAAA;AAAA;AAAA,aAiBA;AAAA,MAEA,oDAAC,QAAK,QAAO,UAAS,IAAG,eAAc,KAAI,uBAAsB,WAAU,kHACzE,8DAAC,SAAI,OAAM,8BAA6B,SAAQ,aAAY,MAAK,QAAO,QAAO,gBAAe,aAAY,KAAI,eAAc,SAAQ,gBAAe,SAAQ,WAAU,WACnK,8DAAC,UAAK,GAAE,6EAAR;AAAA;AAAA;AAAA;AAAA,aAAkF,KADpF;AAAA;AAAA;AAAA;AAAA,aAEA,KAHF;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,SAzBF;AAAA;AAAA;AAAA;AAAA,WA0BA;AAAA,OAjCG;AAAA;AAAA;AAAA;AAAA,SAkCL;AACJ;AACAI,OAAM;AACN,IAAIH;AAAJ,IAAQC;AAAR,IAAaC;AAAb,IAAkBC;AAClB,aAAaH,MAAI,2BAA2B;AAC5C,aAAaC,MAAK,UAAU;AAC5B,aAAaC,MAAK,aAAa;AAC/B,aAAaC,MAAK,QAAQ;AAE1B,OAAO,eAAe;AACtB,OAAO,eAAe;;;AYnHV,IAAAC,0BAAA;AA/BZ,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,yCAA2C,EAAE;AAAA,EACtF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAgC;AAChC,cAAY,IAAI,eAAe;AACjC;AAQO,SAAS,UAAU;AAAA,EACxB;AAAA,EACA,GAAG;AACL,GAAG;AACD,SAAO,oDAAC,cACH,gBAAM,oDAAC,iBAAoB,GAAG,OAC3B,8DAAC,mBACC,8DAAC,mBAAiB,YAAlB;AAAA;AAAA;AAAA;AAAA,SAA2B,KAD7B;AAAA;AAAA;AAAA;AAAA,SAEA,KAHG;AAAA;AAAA;AAAA;AAAA,SAIL,KALC;AAAA;AAAA;AAAA;AAAA,SAML;AACJ;AACAC,OAAK;AACL,IAAIA;AACJ,aAAaA,MAAI,WAAW;AAE5B,OAAO,eAAe;AACtB,OAAO,eAAe;;;AbhBtB,kBAAkD;AAClD,qBAA8B;AAuExB,IAAAC,0BAAA;AAjGN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,8BAAgC,EAAE;AAAA,EAC3E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAqB;AACrB,cAAY,IAAI,eAAe;AACjC;AA4Ee,SAAR,KAAsB;AAE3B,QAAM,KAAK,OAAO;AAClB,UAAQ,IAAI,MAAM,EAAE;AACpB,SAAO,oDAAC,SACJ;AAAA,wDAAC,QAAD;AAAA;AAAA;AAAA;AAAA,WAAS;AAAA,IACT,oDAAC,aAAU,WAAU,SAAQ,cAAa,UAAS,cAAY,MAAC,2BAAyB,MACvF,8DAAC,SAAI,WAAU,8BACb;AAAA,0DAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA,MACR,oDAAC,UAAK,WAAU,oCACd,8DAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aAAQ,KADV;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAJF;AAAA;AAAA;AAAA;AAAA,WAKA,KANF;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,OATG;AAAA;AAAA;AAAA;AAAA,SAUL;AACJ;AACAC,OAAK;AACL,IAAIA;AACJ,aAAaA,MAAI,IAAI;AAErB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_react", "usePrevious", "value", "ref", "React", "previous", "current", "NAVIGATION_MENU_NAME", "Collection", "useCollection", "createCollectionScope", "createCollection", "FocusGroupCollection", "useFocusGroupCollection", "createFocusGroupCollectionScope", "createNavigationMenuContext", "createNavigationMenuScope", "createContextScope", "NavigationMenuProviderImpl", "useNavigationMenuContext", "ViewportContentProvider", "useViewportContentContext", "NavigationMenu", "React", "props", "forwardedRef", "value", "valueProp", "NavigationMenuProps", "navigationMenu", "setNavigationMenu", "composedRef", "useComposedRefs", "node", "direction", "useDirection", "dir", "openTimerRef", "closeTimerRef", "skipDelayTimerRef", "isOpenDelayed", "setIsOpenDelayed", "setValue", "useControllableState", "prop", "onChange", "isOpen", "hasSkipDelayDuration", "skipDelayDuration", "window", "clearTimeout", "current", "setTimeout", "onValueChange", "defaultProp", "defaultValue", "startCloseTimer", "handleOpen", "itemValue", "handleDelayedOpen", "isOpenItem", "delayDuration", "$yHMN2$createElement", "__scopeNavigationMenu", "prevValue", "orientation", "NavigationMenuProvider", "props", "onContentLeave", "viewport", "setViewport", "React", "viewportContent", "setViewportContent", "Map", "indicatorTrack", "setIndicatorTrack", "$yHMN2$createElement", "usePrevious", "value", "useId", "useCallbackRef", "onTriggerEnter", "onTriggerLeave", "onContentEnter", "onItemSelect", "onItemDismiss", "contentValue", "contentData", "prevContent", "set", "has", "delete", "children", "LIST_NAME", "NavigationMenuList", "forwardedRef", "listProps", "context", "useNavigationMenuContext", "__scopeNavigationMenu", "list", "orientation", "position", "onIndicatorTrackChange", "isRootMenu", "ITEM_NAME", "NavigationMenuItemContextProvider", "useNavigationMenuItemContext", "createNavigationMenuContext", "NavigationMenuItem", "React", "props", "forwardedRef", "value", "valueProp", "itemProps", "autoValue", "useId", "contentRef", "triggerRef", "focusProxyRef", "restoreContentTabOrderRef", "wasEscapeCloseRef", "handleContentEntry", "side", "current", "candidates", "getTabbableCandidates", "length", "focusFirst", "reverse", "handleContentExit", "removeFromTabOrder", "$yHMN2$createElement", "__scopeNavigationMenu", "TRIGGER_NAME", "NavigationMenuTrigger", "React", "props", "forwardedRef", "triggerProps", "context", "useNavigationMenuContext", "__scopeNavigationMenu", "itemContext", "useNavigationMenuItemContext", "ref", "composedRefs", "useComposedRefs", "triggerRef", "triggerId", "makeTriggerId", "baseId", "value", "contentId", "makeContentId", "hasPointerMoveOpenedRef", "wasClickCloseRef", "open", "$yHMN2$createElement", "$yHMN2$Fragment", "disabled", "undefined", "getOpenState", "composeEventHandlers", "onPointerEnter", "current", "wasEscapeCloseRef", "onPointerMove", "whenMouse", "onTriggerEnter", "onPointerLeave", "onTriggerLeave", "onClick", "onItemSelect", "onKeyDown", "event", "verticalEntryKey", "dir", "entryKey", "horizontal", "vertical", "orientation", "key", "onEntryKeyDown", "preventDefault", "focusProxyRef", "content", "contentRef", "prevFocusedElement", "relatedTarget", "wasTriggerFocused", "wasFocusFromContent", "contains", "onFocusProxyEnter", "viewport", "LINK_SELECT", "NavigationMenuLink", "React", "props", "forwardedRef", "linkProps", "$yHMN2$createElement", "active", "undefined", "composeEventHandlers", "onClick", "event", "target", "linkSelectEvent", "CustomEvent", "bubbles", "cancelable", "addEventListener", "onSelect", "once", "dispatchDiscreteCustomEvent", "defaultPrevented", "metaKey", "rootContentDismissEvent", "ROOT_CONTENT_DISMISS", "checkForDefaultPrevented", "INDICATOR_NAME", "NavigationMenuIndicator", "React", "props", "forwardedRef", "indicatorProps", "context", "useNavigationMenuContext", "__scopeNavigationMenu", "isVisible", "Boolean", "value", "indicatorTrack", "ReactDOM", "createPortal", "$yHMN2$createElement", "forceMount", "NavigationMenuIndicatorImpl", "React", "props", "forwardedRef", "indicatorProps", "context", "useNavigationMenuContext", "INDICATOR_NAME", "__scopeNavigationMenu", "getItems", "useCollection", "activeTrigger", "setActiveTrigger", "position", "setPosition", "isHorizontal", "orientation", "isVisible", "Boolean", "value", "items", "triggerNode", "find", "item", "ref", "current", "handlePositionChange", "size", "offsetWidth", "offsetHeight", "offset", "offsetLeft", "offsetTop", "useResizeObserver", "indicatorTrack", "$yHMN2$createElement", "left", "width", "transform", "top", "height", "style", "CONTENT_NAME", "NavigationMenuContent", "contentProps", "itemContext", "useNavigationMenuItemContext", "composedRefs", "useComposedRefs", "contentRef", "open", "commonProps", "triggerRef", "focusProxyRef", "wasEscapeCloseRef", "onContentFocusOutside", "onRootContentClose", "viewport", "forceMount", "getOpenState", "composeEventHandlers", "onPointerEnter", "onContentEnter", "onPointerLeave", "whenMouse", "onContentLeave", "pointerEvents", "isRootMenu", "undefined", "ViewportContentMounter", "React", "props", "forwardedRef", "context", "useNavigationMenuContext", "CONTENT_NAME", "__scopeNavigationMenu", "onViewportContentRemove", "useLayoutEffect", "onViewportContentChange", "value", "ref", "ROOT_CONTENT_DISMISS", "NavigationMenuContentImpl", "contentProps", "composedRefs", "useComposedRefs", "triggerId", "makeTriggerId", "baseId", "contentId", "makeContentId", "getItems", "useCollection", "prevMotionAttributeRef", "onItemDismiss", "content", "current", "isRootMenu", "handleClose", "onRootContentClose", "contains", "document", "activeElement", "triggerRef", "focus", "addEventListener", "removeEventListener", "motionAttribute", "items", "values", "map", "item", "dir", "reverse", "index", "indexOf", "prevIndex", "previousValue", "isSelected", "wasSelected", "attribute", "$yHMN2$createElement", "orientation", "rootContentDismissEvent", "Event", "bubbles", "cancelable", "dispatchEvent", "composeEventHandlers", "onFocusOutside", "event", "onContentFocusOutside", "target", "rootNavigationMenu", "preventDefault", "onPointerDownOutside", "isTrigger", "some", "isRootViewport", "viewport", "onKeyDown", "isMetaKey", "altKey", "ctrlKey", "metaKey", "isTabKey", "key", "candidates", "getTabbableCandidates", "currentTarget", "focusedElement", "findIndex", "candidate", "isMovingBackwards", "shiftKey", "nextCandidates", "slice", "length", "focusFirst", "focusProxyRef", "onEscapeKeyDown", "wasEscapeCloseRef", "VIEWPORT_NAME", "NavigationMenuViewport", "viewportProps", "open", "Boolean", "forceMount", "NavigationMenuViewportImpl", "React", "props", "forwardedRef", "viewportImplProps", "context", "useNavigationMenuContext", "VIEWPORT_NAME", "__scopeNavigationMenu", "composedRefs", "useComposedRefs", "onViewportChange", "viewportContentContext", "useViewportContentContext", "CONTENT_NAME", "size", "setSize", "content", "setContent", "viewportWidth", "width", "undefined", "viewportHeight", "height", "open", "Boolean", "value", "activeContentValue", "previousValue", "handleSizeChange", "offsetWidth", "offsetHeight", "useResizeObserver", "$yHMN2$createElement", "getOpenState", "orientation", "pointerEvents", "isRootMenu", "style", "composeEventHandlers", "onPointerEnter", "onContentEnter", "onPointerLeave", "whenMouse", "onContentLeave", "Array", "from", "items", "map", "isActive", "forceMount", "composeRefs", "ref", "node", "FOCUS_GROUP_NAME", "FocusGroup", "groupProps", "dir", "ARROW_KEYS", "FOCUS_GROUP_ITEM_NAME", "FocusGroupItem", "getItems", "useFocusGroupCollection", "onKeyDown", "event", "isFocusNavigationKey", "includes", "key", "candidateNodes", "item", "current", "prevItemKey", "prevKeys", "reverse", "currentIndex", "indexOf", "currentTarget", "slice", "setTimeout", "focusFirst", "preventDefault", "getTabbableCandidates", "container", "nodes", "walker", "document", "createTreeWalker", "NodeFilter", "SHOW_ELEMENT", "acceptNode", "isHiddenInput", "tagName", "type", "disabled", "hidden", "FILTER_SKIP", "tabIndex", "FILTER_ACCEPT", "nextNode", "push", "currentNode", "candidates", "previouslyFocusedElement", "activeElement", "some", "candidate", "focus", "removeFromTabOrder", "forEach", "dataset", "tabindex", "getAttribute", "setAttribute", "prevTabIndex", "element", "onResize", "handleResize", "useCallbackRef", "useLayoutEffect", "rAF", "resizeObserver", "ResizeObserver", "cancelAnimationFrame", "window", "requestAnimationFrame", "observe", "unobserve", "makeTriggerId", "baseId", "makeContentId", "handler", "pointerType", "Root", "NavigationMenu", "List", "NavigationMenuList", "Item", "NavigationMenuItem", "Trigger", "NavigationMenuTrigger", "Link", "NavigationMenuLink", "Indicator", "NavigationMenuIndicator", "Content", "NavigationMenuContent", "Viewport", "NavigationMenuViewport", "import_react", "_jsx", "_Fragment", "import_jsx_dev_runtime", "_c", "_c2", "React", "import_jsx_dev_runtime", "_c", "_c2", "_c3", "_c4", "_c5", "_c6", "_c7", "_c8", "_c9", "_c10", "_c", "_c2", "_c3", "_c4", "_c5", "_c6", "_c7", "_c8", "_c9", "_c10", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "React", "_c", "_c2", "_c3", "_c4", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c"]
}
