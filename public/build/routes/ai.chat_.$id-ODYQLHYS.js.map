{
  "version": 3,
  "sources": ["../../../app/routes/ai.chat_.$id.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\ai.chat_.$id.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\ai.chat_.$id.tsx\");\n  import.meta.hot.lastModified = \"1710142681212.525\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\n\n// import { auth } from '@/auth'\nimport { Chat } from \"~/components/chat\";\nimport { SidebarDesktop } from \"~/components/sidebar-desktop\";\nimport { getChat, getChats } from \"~/models/chat.server\";\nimport { requireUserId } from \"~/session.server\";\nexport const loader = async ({\n  request,\n  params\n}) => {\n  const userId = await requireUserId(request);\n  const id = params.id;\n  const chat = await getChat(id ?? \"\", userId);\n  const chats = await getChats(userId);\n  // console.log(\"Inside chat id page\", chat);\n  if (!chat) {\n    throw new Response(\"Not Found\", {\n      status: 404\n    });\n  }\n  if (!chats) {\n    throw new Response(\"Not Found\", {\n      status: 404\n    });\n  }\n  return json({\n    chat,\n    chats\n  });\n};\n\n// export async function generateMetadata({\n//   params\n// }: ChatPageProps): Promise<Metadata> {\n//   const session = await auth()\n\n//   if (!session?.user) {\n//     return {}\n//   }\n\n//   const chat = await getChat(params.id, session.user.id)\n//   return {\n//     title: chat?.title.toString().slice(0, 50) ?? 'Chat'\n//   }\n// }\n\nexport default function ChatPage() {\n  _s();\n  const {\n    chat\n  } = useLoaderData();\n  const messages = chat.messages.map(message => ({\n    ...message,\n    createdAt: message.createdAt ? new Date(message.createdAt) : undefined,\n    ui: message.ui ? JSON.stringify(message.ui) : undefined // Convert ui to string\n  }));\n  return <div className=\"relative flex h-[calc(100vh_-_theme(spacing.16))] overflow-hidden\">\n      <SidebarDesktop />\n      <div className=\"group w-full overflow-auto pl-0 animate-in duration-300 ease-in-out peer-[[data-state=open]]:lg:pl-[250px] peer-[[data-state=open]]:xl:pl-[300px]\">\n        <Chat id={chat.id} initialMessages={messages} />\n      </div>\n    </div>;\n}\n_s(ChatPage, \"hYEKfO1a1ZdvaLfkMiRkj/gmnx0=\", false, function () {\n  return [useLoaderData];\n});\n_c = ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAAqB;AAMrB,IAAAA,eAAkC;AAClC,qBAA8B;AAoDxB;AA/EN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,wCAA0C,EAAE;AAAA,EACrF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA+B;AAC/B,cAAY,IAAI,eAAe;AACjC;AAmDe,SAAR,WAA4B;AACjC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,QAAM,WAAW,KAAK,SAAS,IAAI,cAAY;AAAA,IAC7C,GAAG;AAAA,IACH,WAAW,QAAQ,YAAY,IAAI,KAAK,QAAQ,SAAS,IAAI;AAAA,IAC7D,IAAI,QAAQ,KAAK,KAAK,UAAU,QAAQ,EAAE,IAAI;AAAA;AAAA,EAChD,EAAE;AACF,SAAO,mDAAC,SAAI,WAAU,qEAClB;AAAA,uDAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,WAAgB;AAAA,IAChB,mDAAC,SAAI,WAAU,qJACb,6DAAC,QAAK,IAAI,KAAK,IAAI,iBAAiB,YAApC;AAAA;AAAA;AAAA;AAAA,WAA8C,KADhD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAJG;AAAA;AAAA;AAAA;AAAA,SAKL;AACJ;AACA,GAAG,UAAU,gCAAgC,OAAO,WAAY;AAC9D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,UAAU;AAE3B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_chat"]
}
