{
  "version": 3,
  "sources": ["../../../app/routes/snop.scenario.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\snop.scenario.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\snop.scenario.tsx\");\n  import.meta.hot.lastModified = \"1711012498829.4058\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\nimport { getScenarioItems, updateScenario, deleteScenarioById, duplicateScenario, archiveSenario } from \"~/models/scenario.server\";\nimport { columns } from \"../components/columns\";\nimport { DataTable } from \"../components/data-table\";\nconst navigation = [{\n  id: 1,\n  name: \"S&OP\",\n  to: \"/snop/optimize\"\n}, {\n  id: 2,\n  name: \"Demand\",\n  to: \"#\"\n}, {\n  id: 3,\n  name: \"Inventory\",\n  to: \"#\"\n}, {\n  id: 4,\n  name: \"Logistics\",\n  to: \"#\"\n}, {\n  id: 5,\n  name: \"Procurement\",\n  to: \"#\"\n}];\nexport const loader = async () => {\n  const scenarioList = await getScenarioItems();\n  // console.log(scenarioList);\n\n  return json({\n    scenarioList\n  });\n};\nexport const action = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const data = Object.fromEntries(formData);\n  const intent = formData.get(\"intent\");\n  const scenarioId = formData.get(\"scenario_id\");\n  console.log(\"Intent-->\", intent);\n  console.log(\"scenario id-->\", scenarioId);\n  console.log(\"Intent-->\", intent);\n  console.log(\"scenario id-->\", scenarioId);\n  if (intent === \"optimize\") {\n    await updateScenario(scenarioId, \"Submitted\");\n  }\n  if (intent === \"delete\") {\n    await deleteScenarioById(scenarioId);\n  }\n  if (intent === \"duplicate\") {\n    await duplicateScenario(scenarioId);\n  }\n  if (intent === \"archive\") {\n    await updateScenario(scenarioId, \"Archived\");\n    await archiveSenario(scenarioId);\n  }\n  return redirect(\".\");\n  // if (intent === 'optimize'){\n  //   await updateScenario()\n  // }\n};\nexport default function TaskPage() {\n  _s();\n  const {\n    scenarioList\n  } = useLoaderData();\n  return <>\r\n      <div className=\"m-2\">\r\n        <div className=\"mx-2 py-3.5 rounded-t-lg bg-sky-500 border-b \">\r\n          <nav className=\"ml-6 pl-6 flex items-center justify-center\" aria-label=\"Global\">\r\n            <div className=\" flex gap-x-8 justify-center \">\r\n              {navigation.map(item => <Link key={item.id} to={item.to} className=\" text-base lg:text-lg font-semibold leading-6 text-white hover:text-gray-200\">\r\n                  {item.name}\r\n                </Link>)}\r\n            </div>\r\n          </nav>\r\n        </div>\r\n        <div className=\"bg-white mx-2 shadow-md rounded-b-lg\">\r\n          <div className=\"flex items-center  justify-between\">\r\n            <h2 className=\"text-3xl font-bold ml-4 p-2 text-transparent bg-clip-text   bg-gradient-to-r from-blue-700 via-sky-700 to-blue-700 font-display\">\r\n              Sales & Operations Planning - List of Scenarios\r\n            </h2>\r\n          </div>\r\n\r\n          <div className=\"m-4 bg-white rounded-lg\">\r\n            <DataTable data={scenarioList} columns={columns} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>;\n}\n_s(TaskPage, \"ognHGA7ERGtZK5VPvXa2Dm9wtPQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = TaskPage;\nvar _c;\n$RefreshReg$(_c, \"TaskPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAA+B;AAE/B,sBAAwG;AAkE/F;AAxFT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,yCAA2C,EAAE;AAAA,EACtF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAgC;AAChC,cAAY,IAAI,eAAe;AACjC;AAQA,IAAM,aAAa,CAAC;AAAA,EAClB,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,IAAI;AACN,GAAG;AAAA,EACD,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,IAAI;AACN,GAAG;AAAA,EACD,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,IAAI;AACN,GAAG;AAAA,EACD,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,IAAI;AACN,GAAG;AAAA,EACD,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,IAAI;AACN,CAAC;AAsCc,SAAR,WAA4B;AACjC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,sFACH,6DAAC,SAAI,WAAU,OACb;AAAA,uDAAC,SAAI,WAAU,iDACb,6DAAC,SAAI,WAAU,8CAA6C,cAAW,UACrE,6DAAC,SAAI,WAAU,iCACZ,qBAAW,IAAI,UAAQ,mDAAC,QAAmB,IAAI,KAAK,IAAI,WAAU,gFAC9D,eAAK,QADyB,KAAK,IAAhB;AAAA;AAAA;AAAA;AAAA,WAEtB,CAAO,KAHX;AAAA;AAAA;AAAA;AAAA,WAIA,KALF;AAAA;AAAA;AAAA;AAAA,WAMA,KAPF;AAAA;AAAA;AAAA;AAAA,WAQA;AAAA,IACA,mDAAC,SAAI,WAAU,wCACb;AAAA,yDAAC,SAAI,WAAU,sCACb,6DAAC,QAAG,WAAU,mIAAkI,+DAAhJ;AAAA;AAAA;AAAA;AAAA,aAEA,KAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MAEA,mDAAC,SAAI,WAAU,2BACb,6DAAC,aAAU,MAAM,cAAc,WAA/B;AAAA;AAAA;AAAA;AAAA,aAAiD,KADnD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SATF;AAAA;AAAA;AAAA;AAAA,WAUA;AAAA,OApBF;AAAA;AAAA;AAAA;AAAA,SAqBA,KAtBG;AAAA;AAAA;AAAA;AAAA,SAuBL;AACJ;AACA,GAAG,UAAU,gCAAgC,OAAO,WAAY;AAC9D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,UAAU;AAE3B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
