{
  "version": 3,
  "sources": ["../../../app/routes/snop.incidents.tsx", "../../../app/components/columns-inci.tsx", "../../../app/components/data-table-inci.tsx", "../../../app/components/data-table-toolbar-inci.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\snop.incidents.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\snop.incidents.tsx\");\n  import.meta.hot.lastModified = \"1710849774920.7056\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData, Link } from \"@remix-run/react\";\nimport { columns } from \"../components/columns-inci\";\nimport { DataTable } from \"../components/data-table-inci\";\nimport taskData from \"../data/columndata/tasks.json\";\nconst navigation = [{\n  id: 1,\n  name: \"S&OP\",\n  to: \"/snop/optimize\"\n}, {\n  id: 2,\n  name: \"Demand\",\n  to: \"#\"\n}, {\n  id: 3,\n  name: \"Inventory\",\n  to: \"#\"\n}, {\n  id: 4,\n  name: \"Logistics\",\n  to: \"#\"\n}, {\n  id: 5,\n  name: \"Procurement\",\n  to: \"#\"\n}];\nasync function getTasks() {\n  const data = await taskData;\n\n  //   const tasks = JSON.parse(data.toString());\n\n  return data;\n}\nexport const loader = async () => {\n  const tasks = await getTasks();\n  return json({\n    tasks\n  });\n};\n\n// // Simulate a database read for tasks.\n// async function getTasks() {\n//   const data = await fs.readFile(\n//     path.join(process.cwd(), \"app/examples/tasks/data/tasks.json\"),\n//   );\n\n//   const tasks = JSON.parse(data.toString());\n\n//   return z.array(taskSchema).parse(tasks);\n// }\n\nexport default function TaskPage() {\n  _s();\n  const {\n    tasks\n  } = useLoaderData();\n  //   const tasks = await getTasks();\n\n  return <>\r\n      <div className=\"m-2\">\r\n        <div className=\"mx-2 py-3.5 rounded-t-lg bg-sky-500 border-b \">\r\n          <nav className=\"ml-6 pl-6 flex items-center justify-center\" aria-label=\"Global\">\r\n            <div className=\" flex gap-x-8 justify-center \">\r\n              {navigation.map(item => <Link key={item.id} to={item.to} className=\" text-base lg:text-lg font-semibold leading-6 text-white hover:text-gray-200\">\r\n                  {item.name}\r\n                </Link>)}\r\n            </div>\r\n          </nav>\r\n        </div>\r\n        <div className=\"bg-white mx-2 shadow-md rounded-b-lg\">\r\n          <div className=\"flex items-center  justify-between\">\r\n            <h2 className=\"text-3xl font-bold ml-4 p-2 text-transparent bg-clip-text   bg-gradient-to-r from-blue-700 via-sky-700 to-blue-700 font-display\">\r\n              Control Tower - List of Actions\r\n            </h2>\r\n          </div>\r\n\r\n          <div className=\"m-4 bg-white rounded-lg p-4\">\r\n            <DataTable data={tasks} columns={columns} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"hidden h-full flex-1 flex-col space-y-8 p-8 md:flex\">\r\n        <div className=\"flex items-center justify-between space-y-2\">\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold tracking-tight\">Welcome back!</h2>\r\n            <p className=\"text-muted-foreground\">\r\n              Here&apos;s a list of your tasks for this month!\r\n            </p>\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <UserNav />\r\n          </div>\r\n        </div>\r\n        <DataTable data={tasks} columns={columns} />\r\n       </div> */}\r\n    </>;\n}\n_s(TaskPage, \"JwSV+PV394aTvUddxZmmlRZ6904=\", false, function () {\n  return [useLoaderData];\n});\n_c = TaskPage;\nvar _c;\n$RefreshReg$(_c, \"TaskPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app\\\\components\\\\columns-inci.tsx\"\n);\nimport.meta.hot.lastModified = \"1710850168840.0242\";\n}\n// REMIX HMR END\n\nimport { ColumnDef } from \"@tanstack/react-table\"\n\nimport { DataTableColumnHeader } from \"../components/data-table-column-header-inci\"\nimport { DataTableRowActions } from \"../components/data-table-row-actions-inci\"\nimport { Badge } from \"../components/ui/badge\"\nimport { Checkbox } from \"../components/ui/checkbox\"\nimport { labels, priorities, statuses } from \"../data/columndata/data\"\nimport { Task } from \"../data/columndata/schema\"\n\n\nexport const columns: ColumnDef<Task>[] = [\n  {\n    id: \"select\",\n    header: ({ table }) => (\n      <Checkbox\n        checked={table.getIsAllPageRowsSelected()}\n        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n        aria-label=\"Select all\"\n        className=\"translate-y-[2px]\"\n      />\n    ),\n    cell: ({ row }) => (\n      <Checkbox\n        checked={row.getIsSelected()}\n        onCheckedChange={(value) => row.toggleSelected(!!value)}\n        aria-label=\"Select row\"\n        className=\"translate-y-[2px]\"\n      />\n    ),\n    enableSorting: false,\n    enableHiding: false,\n  },\n  {\n    accessorKey: \"id\",\n    header: ({ column }) => (\n      <DataTableColumnHeader column={column} title=\"Action\" />\n    ),\n    cell: ({ row }) => <div className=\"w-[80px]\">{row.getValue(\"id\")}</div>,\n    enableSorting: false,\n    enableHiding: false,\n  },\n  {\n    accessorKey: \"status\",\n    header: ({ column }) => (\n      <DataTableColumnHeader column={column} title=\"Status\" />\n    ),\n    cell: ({ row }) => {\n      const status = statuses.find(\n        (status) => status.value === row.getValue(\"status\"),\n      );\n\n      if (!status) {\n        return null;\n      }\n\n      return (\n        <div className=\"flex w-[100px] items-center\">\n          {status.icon ? (\n            <status.icon className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n          ) : null}\n          <span>{status.label}</span>\n        </div>\n      );\n    },\n    filterFn: (row, id, value) => {\n      return value.includes(row.getValue(id));\n    },\n  },\n  {\n    accessorKey: \"priority\",\n    header: ({ column }) => (\n      <DataTableColumnHeader column={column} title=\"Priority\" />\n    ),\n    cell: ({ row }) => {\n      const priority = priorities.find(\n        (priority) => priority.value === row.getValue(\"priority\"),\n      );\n\n      if (!priority) {\n        return null;\n      }\n\n      return (\n        <div className=\"flex items-center\">\n          {priority.icon ? (\n            <priority.icon className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n          ) : null}\n          <span>{priority.label}</span>\n        </div>\n      );\n    },\n    filterFn: (row, id, value) => {\n      return value.includes(row.getValue(id));\n    },\n  },\n  {\n    accessorKey: \"title\",\n    header: ({ column }) => (\n      <DataTableColumnHeader column={column} title=\"Title\" />\n    ),\n    cell: ({ row }) => {\n      const label = labels.find((label) => label.value === row.original.label);\n\n      return (\n        <div className=\"flex space-x-2\">\n          {label ? (\n            <Badge\n              className={`${label.color} ${label.textClr}`}\n              variant=\"outline\"\n            >\n              {label.label}\n            </Badge>\n          ) : null}\n          <span className=\"max-w-[500px] truncate font-medium \">\n            {row.getValue(\"title\")}\n          </span>\n        </div>\n      );\n    },\n  },\n\n  {\n    id: \"actions\",\n    cell: ({ row }) => <DataTableRowActions row={row} />,\n  },\n];\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\data-table-inci.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\data-table-inci.tsx\");\n  import.meta.hot.lastModified = \"1710846044150.202\";\n}\n// REMIX HMR END\n\nimport { flexRender, getCoreRowModel, getFacetedRowModel, getFacetedUniqueValues, getFilteredRowModel, getPaginationRowModel, getSortedRowModel, useReactTable } from \"@tanstack/react-table\";\nimport * as React from \"react\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"../components/ui/table\";\nimport { DataTablePagination } from \"./data-table-pagination-inci\";\nimport { DataTableToolbar } from \"./data-table-toolbar-inci\";\nexport function DataTable({\n  columns,\n  data\n}) {\n  _s();\n  const [rowSelection, setRowSelection] = React.useState({});\n  const [columnVisibility, setColumnVisibility] = React.useState({});\n  const [columnFilters, setColumnFilters] = React.useState([]);\n  const [sorting, setSorting] = React.useState([]);\n  const table = useReactTable({\n    data,\n    columns,\n    state: {\n      sorting,\n      columnVisibility,\n      rowSelection,\n      columnFilters\n    },\n    enableRowSelection: true,\n    onRowSelectionChange: setRowSelection,\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    onColumnVisibilityChange: setColumnVisibility,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFacetedRowModel: getFacetedRowModel(),\n    getFacetedUniqueValues: getFacetedUniqueValues()\n  });\n  return <div className=\"space-y-4\">\n      <DataTableToolbar table={table} />\n      <div className=\"rounded-md border\">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map(headerGroup => <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map(header => {\n              return <TableHead key={header.id} colSpan={header.colSpan}>\n                      {header.isPlaceholder ? null : flexRender(header.column.columnDef.header, header.getContext())}\n                    </TableHead>;\n            })}\n              </TableRow>)}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? table.getRowModel().rows.map(row => <TableRow key={row.id} data-state={row.getIsSelected() && \"selected\"}>\n                  {row.getVisibleCells().map(cell => <TableCell key={cell.id}>\n                      {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                    </TableCell>)}\n                </TableRow>) : <TableRow>\n                <TableCell colSpan={columns.length} className=\"h-24 text-center\">\n                  No results.\n                </TableCell>\n              </TableRow>}\n          </TableBody>\n        </Table>\n      </div>\n      <DataTablePagination table={table} />\n    </div>;\n}\n_s(DataTable, \"AjGf1qisLuzPDW1m9DjbiLObyNE=\", false, function () {\n  return [useReactTable];\n});\n_c = DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\data-table-toolbar-inci.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\data-table-toolbar-inci.tsx\");\n  import.meta.hot.lastModified = \"1710849947006.5466\";\n}\n// REMIX HMR END\n\nimport { Cross2Icon } from \"@radix-ui/react-icons\";\nimport { Button } from \"../components/ui/button\";\nimport { Input } from \"../components/ui/input\";\nimport { priorities, statuses } from \"../data/columndata/data\";\nimport { DataTableFacetedFilter } from \"./data-table-faceted-filter-inci\";\nimport { DataTableViewOptions } from \"./data-table-view-options-inci\";\nexport function DataTableToolbar({\n  table\n}) {\n  const isFiltered = table.getState().columnFilters.length > 0;\n  return <div className=\"flex items-center justify-between\">\n      <div className=\"flex flex-1 items-center space-x-2\">\n        <Input placeholder=\"Filter Actions...\" value={table.getColumn(\"title\")?.getFilterValue() ?? \"\"} onChange={event => table.getColumn(\"title\")?.setFilterValue(event.target.value)} className=\"h-8 w-[150px] lg:w-[250px]\" />\n        {table.getColumn(\"status\") && <DataTableFacetedFilter column={table.getColumn(\"status\")} title=\"Status\" options={statuses} />}\n        {table.getColumn(\"priority\") && <DataTableFacetedFilter column={table.getColumn(\"priority\")} title=\"Priority\" options={priorities} />}\n        {isFiltered && <Button variant=\"ghost\" onClick={() => table.resetColumnFilters()} className=\"h-8 px-2 lg:px-3\">\n            Reset\n            <Cross2Icon className=\"ml-2 h-4 w-4\" />\n          </Button>}\n      </div>\n      <DataTableViewOptions table={table} />\n    </div>;\n}\n_c = DataTableToolbar;\nvar _c;\n$RefreshReg$(_c, \"DataTableToolbar\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["status", "priority", "label", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "columns", "_c", "import_jsx_dev_runtime", "_s", "_s", "_c"]
}
